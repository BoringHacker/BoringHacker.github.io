{"meta":{"title":"BoringHacker's Blog","subtitle":"Stay Hungry, Stay Foolish","description":null,"author":"BoringHacker","url":"www.orchid-any.cf"},"pages":[{"title":"Comments","date":"2020-01-17T07:04:09.000Z","updated":"2020-01-17T07:05:20.286Z","comments":true,"path":"Comments/index.html","permalink":"www.orchid-any.cf/Comments/index.html","excerpt":"","text":"随便说点什么吧(记得改昵称)233…"},{"title":"Havefun","date":"2019-12-21T13:04:04.000Z","updated":"2020-01-15T08:32:06.232Z","comments":true,"path":"Havefun/index.html","permalink":"www.orchid-any.cf/Havefun/index.html","excerpt":"","text":""},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-11-15T17:29:48.000Z","comments":false,"path":"about/index.html","permalink":"www.orchid-any.cf/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-11-15T17:29:48.000Z","comments":false,"path":"bangumi/index.html","permalink":"www.orchid-any.cf/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-11-15T17:29:48.000Z","comments":false,"path":"client/index.html","permalink":"www.orchid-any.cf/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"comment/index.html","permalink":"www.orchid-any.cf/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-11-15T17:29:48.000Z","comments":false,"path":"lab/index.html","permalink":"www.orchid-any.cf/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"links/index.html","permalink":"www.orchid-any.cf/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-11-15T17:29:48.000Z","comments":false,"path":"music/index.html","permalink":"www.orchid-any.cf/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"rss/index.html","permalink":"www.orchid-any.cf/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"tags/index.html","permalink":"www.orchid-any.cf/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-11-15T17:29:48.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"www.orchid-any.cf/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-11-15T17:29:48.000Z","comments":false,"path":"video/index.html","permalink":"www.orchid-any.cf/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-11-15T17:29:48.000Z","comments":false,"path":"donate/index.html","permalink":"www.orchid-any.cf/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"}],"posts":[{"title":"VSCode配置C++指北(硬盘便携版)","slug":"VSCode配置指北","date":"2020-01-16T13:55:50.000Z","updated":"2020-02-05T03:21:39.878Z","comments":true,"path":"2020/01/16/VSCode配置指北/","link":"","permalink":"www.orchid-any.cf/2020/01/16/VSCode配置指北/","excerpt":"","text":"0x00 序言天天看着Dev-Cpp的somebody界面想不想换一个新的环境呢？VS太大，sublime也是一个不错的选择，但sublime的Ctrl+D实在是有些堪忧。今天我们就来尝试一下VSCode 0x01 下载VSCode不要下官网的，下我给的VSCode Portable。链接： 某盘 提取码: m2p2 链接挂了评论区请 为什么不下载官网的呢？因为我们要制作的是随身携带的便携版。 本来我打算自己绿化的，但有现成的就懒了 0x02 下载插件下载以后，先下载几个插件 1. 2. 3. 0x03 配置文件在Code.exe所在的文件夹(也就是根目录)创建三个文件 c_cpp_properties.json: { &quot;configurations&quot;: [ { &quot;name&quot;: &quot;Win32&quot;, &quot;defines&quot;: [&quot;_DEBUG&quot;, &quot;UNICODE&quot;, &quot;_UNICODE&quot;], &quot;compilerPath&quot;: &quot;C:\\\\Program Files (x86)\\\\Dev-Cpp\\\\MinGW64\\\\bin\\\\g++.exe&quot;, &quot;windowsSdkVersion&quot;: &quot;10.0.17763.0&quot;, &quot;intelliSenseMode&quot;: &quot;msvc-x64&quot;, &quot;cStandard&quot;: &quot;c11&quot;, &quot;cppStandard&quot;: &quot;c++17&quot; } ], &quot;version&quot;: 4 } launch.json: { &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ { &quot;name&quot;: &quot;(msvc) Launch&quot;, &quot;type&quot;: &quot;cppvsdbg&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;${workspaceFolder}/1.exe&quot;, &quot;args&quot;: [], &quot;stopAtEntry&quot;: true, &quot;cwd&quot;: &quot;${workspaceFolder}&quot;, &quot;environment&quot;: [], &quot;externalConsole&quot;: false } ] } tasks.json: { &quot;version&quot;: &quot;2.0.0&quot;, &quot;tasks&quot;: [ { &quot;label&quot;: &quot;msvc build&quot;, &quot;type&quot;: &quot;shell&quot;, &quot;command&quot;: &quot;cl.exe&quot;, &quot;args&quot;: [&quot;/EHsc&quot;, &quot;/Zi&quot;, &quot;/Fe:&quot;, &quot;1.exe&quot;, &quot;1.cpp&quot;], &quot;group&quot;: { &quot;kind&quot;: &quot;build&quot;, &quot;isDefault&quot;: true }, &quot;presentation&quot;: { &quot;reveal&quot;: &quot;always&quot; }, &quot;problemMatcher&quot;: &quot;$msCompile&quot; } ] } 把你的MinGW的bin文件夹添加进环境变量，就可以按下F6编译运行你的C++文件了 0x04 完全绿化每次换电脑都要添加环境变量挺烦的对不对？其实，我们可以把VSCode根目录里的东西 Copy到MinGW的bin文件夹里 这样，不用添加环境变量我们就可以直接编译啦！ 最后建议把VSCode和MinGW的文件隐藏一下，免得辣眼睛，最好创建一个Code.exe的快捷方式，方便打开 VSCode还可以装很多插件，下面给出几种大家自己慢慢摸索吧！ Extensions open the web page C/C++ C/C++ Compile Run Chinese filesize Markdown All in One Markdown PDF Open In Default Browser vscode icons Better Comments Auto Close Tag Windows opacity Background Themes Bimbo One Dark Pro Dracula Official","categories":[],"tags":[{"name":"实用","slug":"实用","permalink":"www.orchid-any.cf/tags/实用/"}],"keywords":[]},{"title":"莫队教程","slug":"莫队教程","date":"2020-01-11T14:15:50.000Z","updated":"2020-02-05T04:26:55.407Z","comments":true,"path":"2020/01/11/莫队教程/","link":"","permalink":"www.orchid-any.cf/2020/01/11/莫队教程/","excerpt":"","text":"0x01考虑这样一个问题： 对于一个序列$A_1,A_2,\\cdots,A_n$，有如下询问 形如S l r的命令表示对区间[l,r]求和，并输出 形如Q l r表示… 本题不强制在线 对于这样的静态问题，我们可以考虑用莫队来解决。据说莫队支持修改但我太弱不会 现在你有区间[3,5]的和，可以求[3,6]的区间和吗？显然，将[3,5]的区间和加上A_6即可。类似的，求[2,4]的区间和，我们只需减去A_5即可。 可以结合下图感知一下 0x02好，接下来我们想一下如何维护这种询问之间的关系。 很容易想到排序，首先我们对询问的左端点进行排序。再把整个询问序列分为\\sqrt{n}块，每块以内再按右端点排序。 所以我们可以得出以下结论： 莫队就是对于一系列的询问，通过排序减小询问的之间的差距，然后以计算贡献的方法离线的得出答案 0x03来一道简单的例题 小B的询问小B 有一个长为 n 的整数序列 a，值域为 [1,k]。他一共有 m 个询问，每个询问给定一个区间 [l,r]，求： 其中 c_i 表示数字 i 在 [l,r] 中的出现次数。小B请你帮助他回答询问 这道题让我们求 \\sum\\limits_{i=1}^k c_i^2 开一个桶，计算每个数出现的次数，所以我们可以由此计算答案的贡献，就可以写出以下的代码 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;cmath&gt; using namespace std; const int SIZE = 5e4 + 5; struct QueryNode { int l, r; int id; // 储存询问的顺序，方便输出 } Q[SIZE]; int a[SIZE], n, m, k, pos[SIZE]; int cnt[SIZE], ans[SIZE], res; // a:原序列 // pos:每个位置所处的块 // cnt:桶 // ans:询问的答案 // res:每次调整所得到的贡献 inline void add(int x) { cnt[a[x]]++, res += cnt[a[x]] * cnt[a[x]] - (cnt[a[x]] - 1) * (cnt[a[x]] - 1); } inline void del(int x) { cnt[a[x]]--, res -= (cnt[a[x]] + 1) * (cnt[a[x]] + 1) - cnt[a[x]] * cnt[a[x]]; } signed main() { scanf(&quot;%d %d %d&quot;, &amp;n, &amp;m, &amp;k); int block = sqrt(n); for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i]), pos[i] = i / block; for (int i = 1; i &lt;= m; ++i) scanf(&quot;%d %d&quot;, &amp;Q[i].l, &amp;Q[i].r), Q[i].id = i; sort(Q + 1, Q + 1 + m, [](QueryNode x, QueryNode y) { return pos[x.l] ^ pos[y.l] ? pos[x.l] &lt; pos[y.l] : x.r &lt; y.r; }); int l = 1, r = 0; for (int i = 1; i &lt;= m; ++i) { while (l &gt; Q[i].l) add(--l); // 这四句都是在对当前的区间对于询问的区间进行调整 while (r &lt; Q[i].r) add(++r); // 这三句都是在对当前的区间对于询问的区间进行调整 while (l &lt; Q[i].l) del(l++); // 这二句都是在对当前的区间对于询问的区间进行调整 while (r &gt; Q[i].r) del(r--); // 这一句都是在对当前的区间对于询问的区间进行调整 ans[Q[i].id] = res; } for (int i = 1; i &lt;= m; ++i) printf(&quot;%d\\n&quot;, ans[i]); return 0; } 0x04其实莫队是有套路的，基本上莫队的题都是这样的: for (int i = 1; i &lt;= m; ++i) { while (l &gt; Q[i].l) add(--l); while (r &lt; Q[i].r) add(++r); while (l &lt; Q[i].l) del(l++); while (r &gt; Q[i].r) del(r--); ans[Q[i].id] = res; } 我们只需考虑add函数以及del函数即可 The End","categories":[],"tags":[{"name":"Learning","slug":"Learning","permalink":"www.orchid-any.cf/tags/Learning/"}],"keywords":[]},{"title":"实用网站收集","slug":"实用网站收集","date":"2020-01-04T13:52:16.000Z","updated":"2020-01-04T14:11:03.956Z","comments":true,"path":"2020/01/04/实用网站收集/","link":"","permalink":"www.orchid-any.cf/2020/01/04/实用网站收集/","excerpt":"","text":"图论神器 在线转汇编 LaTex公式大全 OI Wiki OI中转站 线段上色 几何 数列规律 狗屁不通生成器 算法竞赛 AgOH代码仓库 某奆佬博客 开发者知识库","categories":[],"tags":[{"name":"实用","slug":"实用","permalink":"www.orchid-any.cf/tags/实用/"}],"keywords":[]},{"title":"CSP-J 2019 题解","slug":"CSP-J-2019-题解","date":"2019-12-28T13:55:51.000Z","updated":"2020-01-01T05:55:42.575Z","comments":true,"path":"2019/12/28/CSP-J-2019-题解/","link":"","permalink":"www.orchid-any.cf/2019/12/28/CSP-J-2019-题解/","excerpt":"","text":"这次的CSP是十分伤心的，考试的状态不好，导致分数不理想。 睡了一觉后我重做了一下这四道题，觉得还是蛮简单的，于是便有了这篇题解。 T1统计1的数量，字符串模拟即可 #include &lt;bits/stdc++.h&gt; using namespace std; char buf[233]; signed main() { fgets(buf, 233, stdin); int res = 0; for (int i = 0; i &lt; 8; ++i) res += (buf[i] == &#39;1&#39;); printf(&quot;%d&quot;, res); } T2这道题是最亏的，STL是个好东西，但容易遗忘一些细节。比如erase后没有减掉下标。 模拟即可，用一个数组或vector存储优惠票，每次坐地铁的时候扫描一下。 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; using namespace std; vector &lt; pair &lt; int , int &gt; &gt; vec; const int MAXN = 1e5 + 5; struct NODE { int ID; int Pri; int Tim; } a[MAXN]; int n; int ans; signed main() { scanf(&quot;%d&quot;, &amp;n); for (int i = 1; i &lt;= n; ++i) { int x, y, z; scanf(&quot;%d%d%d&quot;, &amp;x, &amp;y, &amp;z); a[i] = NODE{x, y, z}; if (!a[i].ID) { ans += a[i].Pri; vec.push_back(make_pair(a[i].Pri, a[i].Tim)); continue; } int Flag = false; for (int j = 0; j &lt; vec.size(); ++j) { if (abs(a[i].Tim - vec[j].second) &lt;= 45 &amp;&amp; vec[j].first &gt;= a[i].Pri) { vec.erase(vec.begin() + j); --j; Flag = true; break; } if (abs(a[i].Tim - vec[j].second) &gt; 45) vec.erase(vec.begin() + j), --j; } if (!Flag) ans += a[i].Pri; } printf(&quot;%d\\n&quot;, ans); } T3完全背包的题 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;vector&gt; #include &lt;string&gt; #include &lt;utility&gt; #define _ 0 using namespace std; inline int read() { int a = 0, f = 1; char ch; while (!isdigit(ch = getchar())) if (ch == &#39;-&#39;) f = -1; while (isdigit(ch)) a = (a &lt;&lt; 3) + (a &lt;&lt; 1) + (ch ^ &#39;0&#39;), ch = getchar(); return a * f; } template&lt;typename _T&gt; inline void write(_T x) { if (x &lt; 0) x = -x, putchar(&#39;-&#39;); if (x &gt; 9) write(x /10); putchar(x % 10 + &#39;0&#39;); } const int MAXN = 233333 + 5; int T = read(); int n = read(); int m = read(); int o233[105][105]; int dp[MAXN]; signed main() { for (int i = 1; i &lt;= T; ++i) for (int j = 1; j &lt;= n; ++j) o233[i][j] = read(); int ans = m; for (int i = 1; i &lt;= T; ++i) { memset(dp, ~~(0^_^0), sizeof dp); dp[ans] = ans; for (int j = 1; j &lt;= n; ++j) for (int k = ans; k &gt;= o233[i][j]; --k) dp[k - o233[i][j]] = max(dp[k - o233[i][j]], dp[k] + o233[i + 1][j] - o233[i][j]); int maxNum = -2333333; for (int ljs = ~~(0^_^0); ljs &lt;= ans; ++ljs) maxNum = max(maxNum, dp[ljs]); ans = maxNum; } write(ans); return 0; } T4这道题还没有T3难 对这个图跑一遍Dijkstra或SPFA，（这次的数据不知道有没有卡SPFA）处理出所有点到原点的奇数最短路和偶数最短路。 因为边权一直为1，所以只需要用当前的奇数最短路更新偶数最短路，用当前的偶数最短路更新奇数最短路就行了。 有一个坑点在于，若源点是独立的，也就是说若1号结点没有出入度，那么这种情况是一直输出No #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;vector&gt; #include &lt;string&gt; #include &lt;utility&gt; using namespace std; inline int read() { int a = 0, f = 1; char ch; while (!isdigit(ch = getchar())) if (ch == &#39;-&#39;) f = -1; while (isdigit(ch)) a = (a &lt;&lt; 3) + (a &lt;&lt; 1) + (ch ^ &#39;0&#39;), ch = getchar(); return a * f; } template&lt;typename _T&gt; inline void write(_T x) { if (x &lt; 0) putchar(&#39;-&#39;), x = -x; if (9 &lt; x) write(x / 10); putchar(x % 10 + &#39;0&#39;); } const int MAXN = 1e5 + 5; struct UndirectedGraph { long long OddDis; long long EvenDis; } dis[MAXN]; int head[MAXN &lt;&lt; 1], _next[MAXN &lt;&lt; 1]; int ver[MAXN &lt;&lt; 1], edge[MAXN &lt;&lt; 1]; int tot; int n = read(); int m = read(); int q = read(); inline void addEdge(int x, int y, int z) { ver[++tot] = y, edge[tot] = z; _next[tot] = head[x], head[x] = tot; } inline void SPFA() { for (int i = 1; i &lt;= n; ++i) dis[i].EvenDis = dis[i].OddDis = 0x7fffffff; queue&lt;int&gt; Q; Q.push(1); dis[1].EvenDis = 0; while (Q.size()) { int x = Q.front(); Q.pop(); for (int i = head[x]; i; i = _next[i]) { int y = ver[i]; int z = edge[i]; int OddDis = dis[y].OddDis; int EvenDis = dis[y].EvenDis; dis[y].OddDis = min(dis[y].OddDis, dis[x].EvenDis + z); dis[y].EvenDis = min(dis[y].EvenDis, dis[x].OddDis + z); if (dis[y].EvenDis ^ EvenDis || dis[y].OddDis ^ OddDis) Q.push(y); } } } signed main() { bool flag = false; for (int i = 1; i &lt;= m; ++i) { int from = read(); int to = read(); addEdge(from, to, 1); addEdge(to, from, 1); if (from == true || to == true) flag = 1; } SPFA(); for (int i = 1; i &lt;= q; ++i) { int ID = read(); int wanted = read(); if (ID == 1 &amp;&amp; !flag) { puts(&quot;No&quot;); continue; } if (dis[ID].OddDis == 0x7fffffff &amp;&amp; dis[ID].EvenDis == 0x7fffffff) { puts(&quot;No&quot;); continue; } if (((wanted &amp; 1) &amp;&amp; dis[ID].OddDis &lt;= wanted) || ((~wanted &amp; 1) &amp;&amp; dis[ID].EvenDis &lt;= wanted)) puts(&quot;Yes&quot;); else puts(&quot;No&quot;); } #define _ 0 return ~~(0^_^0); }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 P3988 【[SHOI2013]发牌】","slug":"题解-P3988-【-SHOI2013-发牌】","date":"2019-12-28T13:54:46.000Z","updated":"2020-01-01T05:55:16.271Z","comments":true,"path":"2019/12/28/题解-P3988-【-SHOI2013-发牌】/","link":"","permalink":"www.orchid-any.cf/2019/12/28/题解-P3988-【-SHOI2013-发牌】/","excerpt":"","text":"找到1-x的区间，然后转到后面，在删除第一个就好了 需吸氧 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;utility&gt; #include &lt;cctype&gt; #define mid (l + r &gt;&gt; 1) using namespace std; const int SIZE = 7e5 + 5; struct SPLAY { int siz; int val; int ch[2]; int fa; } T[SIZE]; int root, n, R[SIZE], tot; inline void update(int u) { T[u].siz = T[T[u].ch[0]].siz + T[T[u].ch[1]].siz + 1; } inline int make(int l, int r, int fa) { int u = ++tot; T[u].siz = 1; T[u].val = mid; T[u].ch[0] = T[u].ch[1] = 0; T[u].fa = fa; if (mid &gt; l) T[u].ch[0] = make(l, mid - 1, u); if (mid &lt; r) T[u].ch[1] = make(mid + 1, r, u); update(u); return u; } inline void rotate(int x) { int y = T[x].fa; int z = T[y].fa; int w = T[y].ch[1] == x; T[z].ch[T[z].ch[1] == y] = x; T[x].fa = z; T[y].ch[w] = T[x].ch[w ^ 1]; T[T[x].ch[w ^ 1]].fa = y; T[x].ch[w ^ 1] = y; T[y].fa = x; update(y), update(x); } inline void splay(int x, int goal) { for (; T[x].fa ^ goal; rotate(x)) { int y = T[x].fa; int z = T[y].fa; if (z ^ goal) T[y].ch[1] ^ x ^ T[z].ch[1] ^ y ? rotate(x) : rotate(y); } if (!goal) root = x; } inline int getRank(int x) { int u = root; while (233) { if (x &lt;= T[T[u].ch[0]].siz) u = T[u].ch[0]; else { x -= T[T[u].ch[0]].siz + 1; if (!x) return u; u = T[u].ch[1]; } } } inline int getcard(int x) { if (x) { splay(getRank(x), 0); int u = root; root = T[u].ch[1]; T[root].fa = 0; T[u].ch[1] = 0; update(u); splay(getRank(T[root].siz), 0); if (u) T[u].fa = root; if (root) T[root].ch[1] = u, update(root); } int ranker = getRank(1); int res = T[ranker].val; splay(ranker, 0); if (T[ranker].ch[1]) T[root = T[ranker].ch[1]].fa = 0; return res; } signed main() { scanf(&quot;%d&quot;, &amp;n); root = make(1, n, 0); for (int i = 1; i &lt;= n; ++i) { scanf(&quot;%d&quot;, &amp;R[i]); printf(&quot;%d\\n&quot;, getcard(R[i] % T[root].siz)); } return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"SPLAY教程","slug":"SPLAY教程","date":"2019-12-14T13:50:50.000Z","updated":"2020-01-01T05:56:33.409Z","comments":true,"path":"2019/12/14/SPLAY教程/","link":"","permalink":"www.orchid-any.cf/2019/12/14/SPLAY教程/","excerpt":"","text":"本文参考资料:From yyb:Link 正文：关于SPLAY其实我更偏向于把splay叫做cosplay 讲平衡树总逃不过BST(Binary Search Tree)，二叉搜索树，以下是BST的性质： 一棵合法的BST每个节点上都带有一个数值，我们将其称为节点的“关键码”。那么对于一棵BST上的任意节点，满足： 该节点的关键码不小于它左子树的任意结点的关键码 该结点的关键码不大于它右子树的任意结点的关键码 显然，BST的中序遍历是一个递增的序列 建立一棵BST因为笔者很懒，不想到处判边界，所以我们一般可以在一棵空的BST中预先插入两个结点，一个正无穷，一个负无穷，如图: const int SIZE = 1e5 + 5; const int INF = 0x7fffffff; struct BSTNode { int l, r; // 左右儿子的编号 int val; // 关键码 } T[SIZE]; int tot, root; int clone(int val) { // 新建节点 T[++tot].val = val; return tot; } void build() { clone(-INF), clone(INF); root = 1, T[1].r = 2; } 以上是建树的代码 那么，BST就讲到这里 平衡树的诞生当BST形成一条链的时候，每次查询会变成O(n^2) 这种深度过深的BST是不平衡的。所以我们需要一种能保持树的深度在\\log(n)的数据结构，于是便诞生了平衡树 SPLAYsplay，又称cosplay伸展树，有“序列之王”的美称，常数巨大，跑的没有fhq-treap快，但这不在我们的讨论范围以内 想象一下这样一颗BST，我们先把它们的大小关系列出来。 Y&lt;Z, C&gt;Y, X&lt;Y,A&lt;X,B&gt;X 对于这样一颗BST，我们可以通过一些特殊的方式来改变它的形态保持中序序列不变，这也是平衡树的精髓。 怎么改变呢？ 旋转旋转不转不是中国人，这是splay的精髓所在。 现在我们的目标是让X节点往上爬到它父亲节点Y处，让Y变成X的幺儿，也就是让Y节点下降。 这个过程首先要满足BST性质 通过例图来思考，此时的X节点是Y节点的左儿子，小于Y节点，为了不改变中序序列，我们可以让Y节点成为X的右儿子。那么问题来了：变换后的Y的确大于X，但X还有一颗右子树呢！ 别急，再回想一下BST的性质，任意节点大于其左子树中的任意节点，也就是说我们可以把X的左子树B拿给Y当左子树。 好了！世界核平了！Tarjan放心了 展示一下旋转的成果吧！ 旋转前： 旋转后 别高兴得太早！ 这只是一种情况，我们需要的是通用 这里有一个小技巧，即： odd\\bigoplus1=odd-1 even\\bigoplus1=even+1 这个性质的证明很简单： 即得易见平凡，仿照上例显然。 留作习题答案略，读者自证不难。 反之亦然同理，推论自然成立，略去过程QED，由上可知证毕。 Just a joke 设节点Y为X的父亲，Y的w(0代表左儿子，1代表右儿子)儿子 step1:将Y节点放到X节点的w\\bigoplus1的位置 step2:如果X的w\\bigoplus1位置上有一颗子树，放在Y的w位置上 inline void update(int x) { // 更新节点信息 T[x].siz = T[T[x].ch[0]].siz + T[T[x].ch[1]].siz + T[x].cnt; } inline void rotate(int x) { // 旋转 int y = T[x].fa; // X它爹 int z = T[y].fa; // X它爹它爹 int w = T[y].ch[1] == x; // X是它爹的左幺儿还是右幺儿 T[z].ch[T[z].ch[1] == y] = x; T[x].fa = z; T[y].ch[w] = T[x].ch[w ^ 1]; T[T[x].ch[w ^ 1]].fa = y; T[x].ch[w ^ 1] = y; T[y].fa = x; update(y), update(x); } 仅仅有rotate操作还不够，splay到目前为止依然很容易被卡。 想象这样一棵树： 发现无论怎么旋转X都不能使得这棵树最长的一条链变短。我们称这种X，X它爹，X它爹它爹在一条线上的情况称为三点共线。 怎么办呢？可怜的splay被人溜了 办法还是有滴 step1:如果三点共线，我们可以先旋转X它爹，这样便可以使其更加“平衡” step2:如果不共线……不共线……那就旋转X就好了 这便是splay操作 inline void splay(int x, int goal) { //splay for (; T[x].fa ^ goal; rotate(x)) { // 一直旋转到x成为goal的儿子 int y = T[x].fa; int z = T[y].fa; if (z ^ goal) T[y].ch[1] ^ x ^ T[z].ch[1] ^ y ? rotate(x) : rotate(y); //判断三点是否共线，如果是，就旋转Y，否则旋转X } if (!goal) root = x; // 把根节点设为X } 至此，splay就差不多讲完了，那么再来一道例题吧 【模板】普通平衡树 题面： 您需要写一种数据结构（可参考题目标题），来维护一些数，其中需要提供以下操作： 1.插入 x 数 2.删除 x 数(若有多个相同的数，因只删除一个) 3.查询 x 数的排名(排名定义为比当前数小的数的个数 +1 ) 4.查询排名为 x 的数 5.求 x 的前驱(前驱定义为小于 x，且最大的数) 6.求 x 的后继(后继定义为大于 x，且最小的数) 插入操作首先我们先查找BST当中有没有和需要插入的节点关键码相同的节点，如果有，就把当前节点的“副本”数+1 如果没有，就遍历到叶子节点，再新增一个节点就好了 inline void insert(int x) { int u = root, fa = 0; // 从根节点开始找 while (u &amp;&amp; x ^ T[u].val) // 找关键码相同的节点 fa = u, u = T[u].ch[x &gt; T[u].val]; if (u) T[u].cnt++; // 如果有，就增加一个副本 else { // 否则新建一个节点 u = ++tot; if (fa) T[fa].ch[x &gt; T[fa].val] = u; T[u].fa = fa; T[u].siz = T[u].cnt = 1; T[u].ch[0] = T[u].ch[1] = 0; T[u].val = x; } splay(u, 0); } 查找操作设查找节点的关键码为x，如果x大于当前节点的关键码，就往右子树跑，否则往左子树找。找到后把当前节点splay到根，保证BST的平衡 inline void find(int x) { int u = root; if (!u) return ; // BST空 while (T[u].ch[x &gt; T[u].val] &amp;&amp; x ^ T[u].val) u = T[u].ch[x &gt; T[u].val]; splay(u, 0); } 前驱/后继操作首先执行find操作。 以前驱为例，当前的根节点就是x的父节点，所以如果root的关键码大于x，那么root就是x的前驱。否则就跳到左儿子找，再反着跳就好了 inline int next_bound(int x, int f) { // f=0前驱，f=1后继 find(x); int u = root; // x的父节点 if (T[u].val &gt; x &amp;&amp; f) return u; if (T[u].val &lt; x &amp;&amp; !f) return u; u = T[u].ch[f]; // 跳到对应的子树 while (T[u].ch[f ^ 1]) u = T[u].ch[f ^ 1]; // 反着跳转 return u; } 删除操作找到这个数的last，把他splay到根节点 然后找到这个数next，把他splay到last的底下 然后……然后就没有了呀…… 比last大是next 比next小的且比last大的只有当前的节点 在next的左幺儿上面， だから直接把root右幺儿的左幺儿删掉就可以了 inline void erase(int x) { int last = next_bound(x, 0); int next = next_bound(x, 1); splay(last, 0), splay(next, last); int del = T[next].ch[0]; if (T[del].cnt &gt; 1) { T[del].cnt--; splay(del, 0); } else T[next].ch[0] = 0; } 第K大现在再来看已经十分简单了 首先如果左子树的大小加上本身的个数大于k，直接在左子树里找就行了 否则就把k减去左子树大小再减去本身的个数，再在右子树里找就行了 inline int kth_element(int x) { int u = root; if (T[u].siz &lt; x) return 0; // 没有那么多，直接死亡 while (233) { int y = T[u].ch[0]; if (x &gt; T[y].siz + T[u].cnt) { x -= T[y].siz + T[u].cnt; u = T[u].ch[1]; } else if (T[y].siz &gt;= x) u = y; else return T[u].val; } } 完整代码： #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;vector&gt; using namespace std; const int SIZE = 1e5 + 5; int n, root, tot; struct SPLAY { int fa; int siz; int cnt; int val; int ch[2]; } T[SIZE]; inline void update(int x) { T[x].siz = T[T[x].ch[0]].siz + T[T[x].ch[1]].siz + T[x].cnt; } inline void rotate(int x) { int y = T[x].fa; int z = T[y].fa; int w = T[y].ch[1] == x; T[z].ch[T[z].ch[1] == y] = x; T[x].fa = z; T[y].ch[w] = T[x].ch[w ^ 1]; T[T[x].ch[w ^ 1]].fa = y; T[x].ch[w ^ 1] = y; T[y].fa = x; update(y), update(x); } inline void splay(int x, int goal) { for (; T[x].fa ^ goal; rotate(x)) { int y = T[x].fa; int z = T[y].fa; if (z ^ goal) T[y].ch[1] ^ x ^ T[z].ch[1] ^ y ? rotate(x) : rotate(y); } if (!goal) root = x; } inline void find(int x) { int u = root; if (!u) return ; while (T[u].ch[x &gt; T[u].val] &amp;&amp; x ^ T[u].val) u = T[u].ch[x &gt; T[u].val]; splay(u, 0); } inline void insert(int x) { int u = root, fa = 0; while (u &amp;&amp; x ^ T[u].val) fa = u, u = T[u].ch[x &gt; T[u].val]; if (u) T[u].cnt++; else { u = ++tot; if (fa) T[fa].ch[x &gt; T[fa].val] = u; T[u].fa = fa; T[u].siz = T[u].cnt = 1; T[u].ch[0] = T[u].ch[1] = 0; T[u].val = x; } splay(u, 0); } inline int next_bound(int x, int f) { find(x); int u = root; if (T[u].val &gt; x &amp;&amp; f) return u; if (T[u].val &lt; x &amp;&amp; !f) return u; u = T[u].ch[f]; while (T[u].ch[f ^ 1]) u = T[u].ch[f ^ 1]; return u; } inline void erase(int x) { int last = next_bound(x, 0); int next = next_bound(x, 1); splay(last, 0), splay(next, last); int del = T[next].ch[0]; if (T[del].cnt &gt; 1) { T[del].cnt--; splay(del, 0); } else T[next].ch[0] = 0; } inline int kth_element(int x) { int u = root; if (T[u].siz &lt; x) return 0; while (233) { int y = T[u].ch[0]; if (x &gt; T[y].siz + T[u].cnt) { x -= T[y].siz + T[u].cnt; u = T[u].ch[1]; } else if (T[y].siz &gt;= x) u = y; else return T[u].val; } } signed main() { scanf(&quot;%d&quot;, &amp;n); insert(1e9); insert(-1e9); for (int i = 1; i &lt;= n; ++i) { int opt, x; scanf(&quot;%d %d&quot;, &amp;opt, &amp;x); if (opt == 1) insert(x); if (opt == 2) erase(x); if (opt == 3) { find(x); printf(&quot;%d\\n&quot;, T[T[root].ch[0]].siz); } if (opt == 4) printf(&quot;%d\\n&quot;, kth_element(x + 1)); if (opt == 5) printf(&quot;%d\\n&quot;, T[next_bound(x, 0)].val); if (opt == 6) printf(&quot;%d\\n&quot;, T[next_bound(x, 1)].val); } return 0; } 欢迎捉虫子","categories":[],"tags":[{"name":"Learning","slug":"Learning","permalink":"www.orchid-any.cf/tags/Learning/"}],"keywords":[]},{"title":"OldDriveTree(ChthollyTree)学习笔记","slug":"OldDriveTree-ChthollyTree-学习笔记","date":"2019-11-30T14:10:05.000Z","updated":"2020-01-01T05:55:52.896Z","comments":true,"path":"2019/11/30/OldDriveTree-ChthollyTree-学习笔记/","link":"","permalink":"www.orchid-any.cf/2019/11/30/OldDriveTree-ChthollyTree-学习笔记/","excerpt":"","text":"众所周知，数据结构+算法=程序，可见数据结构的重要性数据结构占了我们编程的一大部分。数据结构的大家族中，有优美的线段树、树状数组等。但我们今天的主角却十分暴力。她的名字叫珂朵莉树 珂朵莉树是基于C++STL库中的set的数据结构。与线段树、平衡树等树形结构类似，珂朵莉树是用来解决区间问题的很暴力的树形结构。 她的特点是能够进行区间推平操作，并且时间复杂度接近O(n log m) 。但前提是数据随机。但一般不会有哪个出题人去卡这样一个并不出名的数据结构。并且要有区间推平操作，否则光是一个split时间复杂度会炸。 珂朵莉树的构造长成这个亚子: struct Chtholly { LL L; LL R; //区间 mutable LL _val; //值，注意，关键字mutable是必需的，否则会在add函数里CE node(LL l, LL r = -1, LL V = 0) : L(l), R(r), _val(V) {} bool operator&lt;(const node &amp;rhs) const { return L &lt; rhs.L; } } Split操作: inline IT split(int k) { IT it = st.lower_bound(node(k)); if (it != st.end() &amp;&amp; it-&gt;L == k) return it; --it; LL l = it-&gt;L, r = it-&gt;R; LL v = it-&gt;_val; st.erase(it); st.insert(node(l, k - 1, v)); return st.insert(node(k, r, v)).first; } 为了操作方便我们这里有一个define: #define IT set&lt;Chtholly&gt;::iterator assign区间推平操作，这也是珂朵莉树的时间复杂度保证 inline void assign(LL ll, LL rr, LL val) { IT itr = split(rr + 1), itl = split(ll); st.erase(itl, itr); st.insert(node(ll, rr, val)); } 举几个例子吧 区间求和:inline LL Qsum(LL ll, LL rr) { LL res = 0; IT itr = split(rr + 1), itl = split(ll); for (; itl != itr; ++itl) res += (itl-&gt;R - itl-&gt;L + 1) * itl-&gt;_val; return res; } 区间第K小:inline LL kth(LL ll, LL rr, LL k) { vector&lt;pair&lt;LL, LL&gt; &gt; vec; IT itr = split(rr + 1), itl = split(ll); for (; itl != itr; ++itl) vec.push_back(pair&lt;LL, LL&gt;(itl-&gt;_val, itl-&gt;R - itl-&gt;L + 1)); sort(vec.begin(), vec.end()); for (auto it = vec.begin(); it != vec.end(); ++it) { k -= it-&gt;second; if (k &lt;= 0) return it-&gt;first; } return -1; } 区间加inline void add(LL ll, LL rr, LL ad) { IT itr = split(rr + 1), itl = split(ll); for (; itr != itl; ++itl) itl-&gt;_val += ad; } 平时大家还是尽量少用······","categories":[],"tags":[{"name":"Learning","slug":"Learning","permalink":"www.orchid-any.cf/tags/Learning/"}],"keywords":[]},{"title":"图论最短路(Dijkstra、SPFA)模板","slug":"图论最短路-Dijkstra、SPFA-模板","date":"2019-11-30T14:08:57.000Z","updated":"2020-01-01T05:55:32.040Z","comments":true,"path":"2019/11/30/图论最短路-Dijkstra、SPFA-模板/","link":"","permalink":"www.orchid-any.cf/2019/11/30/图论最短路-Dijkstra、SPFA-模板/","excerpt":"","text":"nlogn堆优化邻接表 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; using namespace std; const int _INF = 0x3F; const int MAXN = 200000 + 5; struct _Node { int _Pos; int _Val; bool operator &lt; (const _Node &amp;rhs) const { return _Val &gt; rhs._Val; } }; struct _Edge { int _To; int _Val; } Edge[MAXN]; vector&lt;_Edge&gt; G[MAXN]; bool isVis[MAXN]; int n, m, s, t; int nowRhs[MAXN]; inline void pushEdge(int _From, int _To, int _Val) { G[_From].push_back(_Edge{_To, _Val}); } inline void _Dijkstra(int k) { memset(nowRhs, _INF, sizeof nowRhs); nowRhs[k] = 0; priority_queue&lt;_Node&gt; Q; Q.push(_Node{k, 0}); while (!Q.empty()) { _Node _next = Q.top(); Q.pop(); int _Pos = _next._Pos; if (isVis[_Pos]) continue; isVis[_Pos] = true; for (int i = 0; i &lt; G[_Pos].size(); ++i) { _Edge _nextE = G[_Pos][i]; if (nowRhs[_nextE._To] &gt; nowRhs[_Pos] + _nextE._Val) { nowRhs[_nextE._To] = nowRhs[_Pos] + _nextE._Val; Q.push(_Node{_nextE._To, nowRhs[_nextE._To]}); } } } } signed main() { // freopen(&quot;test.in&quot;, &quot;r&quot;, stdin); // freopen(&quot;test.out&quot;, &quot;w&quot;, stdout); scanf(&quot;%d%d&quot;, &amp;n, &amp;m); scanf(&quot;%d&quot;, &amp;s); for (int i = 1; i &lt;= m; ++i) { int _From, _To; int _Val; scanf(&quot;%d%d%d&quot;, &amp;_From, &amp;_To, &amp;_Val); pushEdge(_From, _To, _Val); } _Dijkstra(s); for (int i = 1; i &lt;= n; ++i) printf(&quot;%d &quot;, nowRhs[i]); return 0; } n^2邻接矩阵 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;climits&gt; #include &lt;queue&gt; using namespace std; const int MAXN = 2500 + 5; bool vis[MAXN]; //一个点是否被访问过 int dis[MAXN]; //源点到一个节点的目前最小权重 int n, m, s, t, INF; int G[MAXN][MAXN]; //邻接矩阵 inline void Dijkstra(int k) { for (int i = 1; i &lt;= n; ++i) if (G[k][i] ^ INF) dis[i] = G[k][i]; vis[k] = true; dis[k] = 0; for (int i = 1; i &lt; n; ++i) { int minx = 0x3f3f3f3f; int tmp = 0; for (int j = 1; j &lt;= n; ++j) { if (!vis[j] &amp;&amp; dis[j] &lt; minx) { minx = dis[j]; tmp = j; } } if (!tmp) continue; vis[tmp] = true; for (int j = 1; j &lt;= n; ++j) if (G[tmp][j] ^ INF) dis[j] = min(dis[j], dis[tmp] + G[tmp][j]); } printf(&quot;%d\\n&quot;, dis[t]); } signed main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); s = 1; t = n; memset(&amp;INF, 0x3f, sizeof(int)); fill(G[0], G[0] + MAXN * MAXN, INF); for (register int i = 0; i &lt; m; ++i) { register int u, v, w; scanf(&quot;%d%d%d&quot;, &amp;u, &amp;v, &amp;w); G[u][v] = w; G[v][u] = w; } fill(dis, dis + MAXN, INT_MAX); Dijkstra(s); return 0; } Update链式前向星版: #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;utility&gt; #include &lt;climits&gt; using namespace std; inline int getInt() { int a = 0, f = 1; char ch; while (!isdigit(ch = getchar())) if (ch == &#39;-&#39;) f = -1; while (isdigit(ch)) a = (a &lt;&lt; 3) + (a &lt;&lt; 1) + (ch ^ &#39;0&#39;), ch = getchar(); return a * f; } const int MAXN = 1e5 + 5; const int MAXM = MAXN &lt;&lt; 1; int n = getInt(); int m = getInt(); int s = getInt(); int head[MAXN], _next[MAXM]; int ver[MAXM], edge[MAXM], tot; int dis[MAXN], vis[MAXN]; inline void addEdge(int x, int y, int z) { ver[++tot] = y, edge[tot] = z; _next[tot] = head[x], head[x] = tot; } inline void Dijkstra() { memset(dis, 0x7F, sizeof dis); memset(vis, false, sizeof vis); priority_queue &lt; pair &lt; int , int &gt; &gt; Q; dis[s] = 0; Q.push(make_pair(0, s)); while (!Q.empty()) { int x = Q.top().second; Q.pop(); if (vis[x]) continue; vis[x] = true; for (int i = head[x]; i; i = _next[i]) { int y = ver[i]; int z = edge[i]; if (dis[y] &gt; dis[x] + z) { dis[y] = dis[x] + z; Q.push(make_pair(-dis[y], y)); } } } } signed main() { for (int i = 1; i &lt;= m; ++i) { int x = getInt(); int y = getInt(); int z = getInt(); addEdge(x, y, z); } Dijkstra(); for (int i = 1; i &lt;= n; ++i) printf(&quot;%d &quot;, dis[i]); return 0; } SPFA #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;utility&gt; #include &lt;climits&gt; using namespace std; inline int getInt() { int a = 0, f = 1; char ch; while (!isdigit(ch = getchar())) if (ch == &#39;-&#39;) f = -1; while (isdigit(ch)) a = (a &lt;&lt; 3) + (a &lt;&lt; 1) + (ch ^ &#39;0&#39;), ch = getchar(); return a * f; } const int MAXN = 500000 + 5; const int MAXM = MAXN &lt;&lt; 1; int n = getInt(); int m = getInt(); int s = getInt(); int head[MAXN], _next[MAXM]; int ver[MAXM], edge[MAXM], tot; int dis[MAXN], vis[MAXN]; inline void addEdge(int x, int y, int z) { ver[++tot] = y, edge[tot] = z; _next[tot] = head[x], head[x] = tot; } inline void spfa() { fill(dis, dis + MAXN, 2147483647); memset(vis, false, sizeof vis); dis[s] = 0; vis[s] = true; queue&lt;int&gt; Q; Q.push(s); while (!Q.empty()) { int x = Q.front(); Q.pop(); vis[x] = false; for (int i = head[x]; i; i = _next[i]) { int y = ver[i]; int z = edge[i]; if (dis[y] &gt; dis[x] + z) { dis[y] = dis[x] + z; if (!vis[y]) Q.push(y), vis[y] = true; } } } } signed main() { for (int i = 1; i &lt;= m; ++i) { int x = getInt(); int y = getInt(); int z = getInt(); addEdge(x, y, z); } spfa(); for (int i = 1; i &lt;= n; ++i) printf(&quot;%d &quot;, dis[i]); return 0; } `","categories":[],"tags":[{"name":"233","slug":"233","permalink":"www.orchid-any.cf/tags/233/"}],"keywords":[]},{"title":"O(n)的排序算法","slug":"O-n-的排序算法","date":"2019-11-30T14:08:17.000Z","updated":"2020-01-01T05:55:56.472Z","comments":true,"path":"2019/11/30/O-n-的排序算法/","link":"","permalink":"www.orchid-any.cf/2019/11/30/O-n-的排序算法/","excerpt":"","text":"珠排序是一种时间复杂度为O(n)的排序算法，他的来历可能是创始人脑子一抽想出来的珠排序的思想是模拟，只不过不是我们平时做题的那种照题意模拟。他是模拟的现实生活。 就像这个亚子： e.g: This image was SPFAed 是不是特别神奇！ 给个代码实现吧，代码和图是我从网上找的，侵删 #include &lt;stdio.h&gt; #include &lt;ctype.h&gt; int temp1,temp2; signed main() { int times = 2; int counter = 0; int i = 0; int j = 0; scanf(&quot;%d&quot;,&amp;times); int numbers[times]; for (int k = 0; k &lt; times; k++) { scanf(&quot;%d&quot;,&amp;numbers[k]); } int max = numbers[0]; for (int h = 0; h &lt; times; h++) { if(max &lt; numbers[h]) { max = numbers[h]; } } int temp3 = 0; int numbers1[max]; do { temp3 = 0; for(j = 0; j &lt; times; j++) { if(numbers[j] &lt; i + 1) { temp3++; } } numbers1[i] = temp3; i++; } while(i &lt; max); int numbers2[times]; int temp4 = 0; int n = 0; for(int l = 0 ; l &lt; times; l++) { for(n = 0; n &lt; i; n++) { if(numbers1[n] &lt; l + 1) { temp4++; } } numbers2[l] = temp4; temp4 = 0; } for (int m = 0; m &lt; times; m++) { printf(&quot;%d , &quot;,numbers2[m]); } } 其实这份代码完全可以用vector优化 这个算法平时不建议大家使用，至于原因相信看懂了代码都清楚","categories":[],"tags":[{"name":"Learning","slug":"Learning","permalink":"www.orchid-any.cf/tags/Learning/"}],"keywords":[]},{"title":"NO题解 IP2015——sum 求和T3简单版题解(花样优化卡常)","slug":"NO题解-IP2015——sum-求和T3简单版题解-花样优化卡常","date":"2019-11-30T14:07:09.000Z","updated":"2020-01-01T05:55:48.239Z","comments":true,"path":"2019/11/30/NO题解-IP2015——sum-求和T3简单版题解-花样优化卡常/","link":"","permalink":"www.orchid-any.cf/2019/11/30/NO题解-IP2015——sum-求和T3简单版题解-花样优化卡常/","excerpt":"","text":"昨天这道题也是难倒了很多同学，但这并没有妨碍的某LJS AK(顺便%一波) 但是LJS的题解对我这种数学渣到不行蒟蒻实在不太友好，于是我干脆不看了。 LJS题解传送门 于是我就想，这道题既然能够用暴力，那么就一定能够用各种奇淫技巧优化。 O(N^3)首先我们只考虑 O(N^3) 的裸暴力，枚举每个x,y,z。这样就有20分了。 O(N^2)接下来仔细观察题目，发现题目限制 y-x=z-y ，通过移项，可以得到 z+x=2y 那么我们就可以去掉枚举 y 的循环，时间复杂度 O(N^2) 这样就有40分了，再加上一些花里胡哨的优化，可以骗到60分 歪正解再来观察 z+x=2y 这个式子， 2y 一定是一个偶数，那么则 z 和 x 满足同奇偶。 再次阅读题目，观察三元组的限制条件，我们很容易就可以想到按照颜色和每个格子的下标进行分组，那么像这样看来，我们就应该把重点放在cmp排序函数上。 既然 z 和 x 满足同奇偶，那么我们就可以按照这个来进行排序。 排序后，我们就可以很方便的判断哪些情况是不可能的，则枚举每一个 z 和 x ，判断不可能的情况，然后直接 break ，听起来有些像搜索的剪枝 照这个思路写出来的40分代码:#include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #define MOD 10007 using namespace std; const int MAXN = 100000 + 5; struct Node { int color; int number; int ID; } a[MAXN]; int n, m; bool Rule(const Node &amp;a, const Node &amp;b) { return ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color == b.color) &amp;&amp; (a.ID &lt; b.ID)) || ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color &lt; b.color)) || (a.ID % 2 &lt; b.ID % 2); } int result(int x, int z) { return (a[x].ID + a[z].ID) * (a[x].number + a[z].number); } int main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].number), a[i].ID = i; for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].color); int ans = 0; sort(a + 1, a + 1 + n, Rule); for (int i = 1; i &lt;= n; ++i) for (int k = i + 1; k &lt;= n; ++k) { if ((a[i].ID + a[k].ID) &amp; 1) break; if (a[i].color != a[k].color) break; ans += result(i, k) % MOD; } printf(&quot;%d\\n&quot;, ans % MOD); return 0; } 结果: 这是为什么呢？原来没开 long long 见祖宗了 90分代码: #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #define MOD 10007 using namespace std; const long long MAXN = 100000 + 5; struct Node { long long color; long long number; long long ID; } a[MAXN]; long long n, m; bool Rule(const Node &amp;a, const Node &amp;b) { return ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color == b.color) &amp;&amp; (a.ID &lt; b.ID)) || ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color &lt; b.color)) || (a.ID % 2 &lt; b.ID % 2); } long long result(long long x, long long z) { return (a[x].ID + a[z].ID) * (a[x].number + a[z].number); } int main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (long long i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].number), a[i].ID = i; for (long long i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].color); long long ans = 0; sort(a + 1, a + 1 + n, Rule); for (long long i = 1; i &lt;= n; ++i) for (long long k = i + 1; k &lt;= n; ++k) { if ((a[i].ID + a[k].ID) &amp; 1) break; if (a[i].color != a[k].color) break; ans += result(i, k) % MOD; } printf(&quot;%d\\n&quot;, ans % MOD); return 0; } 结果: 有一个点超时了，于是开始卡常: #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #define MOD 10007 using namespace std; const int MAXN = 100000 + 5; struct Node { long long color; long long number; long long ID; } a[MAXN]; long long n, m; inline bool Rule(const Node &amp;a, const Node &amp;b) { return ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color == b.color) &amp;&amp; (a.ID &lt; b.ID)) || ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color &lt; b.color)) || (a.ID % 2 &lt; b.ID % 2); } inline long long result(register long long x, register long long z) { return (a[x].ID + a[z].ID) * (a[x].number + a[z].number); } signed main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (register int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].number), a[i].ID = i; for (register int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].color); register long long ans = 0; sort(a + 1, a + 1 + n, Rule); for (register int i = 1; i &lt;= n; ++i) for (register int k = i + 1; k &lt;= n; ++k) { if ((a[i].ID + a[k].ID) &amp; 1) break; if (a[i].color ^ a[k].color) break; ans += result(i, k) % MOD; } printf(&quot;%d\\n&quot;, ans % MOD); return 0; } 依旧是90分，脑子快爆了的我只好祭出这个 #pragma GCC optimize (2) AC代码: #pragma GCC optimize (2) #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #define MOD 10007 using namespace std; const int MAXN = 100000 + 5; struct Node { long long color; long long number; long long ID; } a[MAXN]; long long n, m; inline bool Rule(const Node &amp;a, const Node &amp;b) { return ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color == b.color) &amp;&amp; (a.ID &lt; b.ID)) || ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color &lt; b.color)) || (a.ID % 2 &lt; b.ID % 2); } inline long long result(register long long x, register long long z) { return (a[x].ID + a[z].ID) * (a[x].number + a[z].number); } signed main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (register int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].number), a[i].ID = i; for (register int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].color); register long long ans = 0; sort(a + 1, a + 1 + n, Rule); for (register int i = 1; i &lt;= n; ++i) for (register int k = i + 1; k &lt;= n; ++k) { if ((a[i].ID + a[k].ID) &amp; 1) break; if (a[i].color ^ a[k].color) break; ans += result(i, k) % MOD; } printf(&quot;%d\\n&quot;, ans % MOD); return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 引水入城","slug":"题解-引水入城","date":"2019-11-30T14:06:24.000Z","updated":"2020-01-01T05:55:26.535Z","comments":true,"path":"2019/11/30/题解-引水入城/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-引水入城/","excerpt":"","text":"这道题很明显的贪心+搜索 但我不会…… 我认为不能放弃，于是继续分析。 我们可以简单的通过搜索判断是否有解， 然后对于第一行的每个点我们再次通过搜索遍历计算出它能够流到的最后一行所有的点，并且这些点一定是连续的。 假设这些点中间如果有断开的话，设不能走到的那个点为x,那么x必定会大于左、右、上层的高度，即无解 我们再次算出第一行每个点对应的最后一行的区间，然后记录左边边界和右边边界，然后…… 然后就是明显的不要bFace的线段覆盖dp了。 if (Lover[j] &lt;= i &amp;&amp; Fucker[j] &gt;= i) dp[i] = min(dp[i],dp[Lover[j] - 1] + 1); 做后直接输出dp[m]就可以了! #pragma G++ optimize (2) #include &lt;cstdio&gt; #include &lt;cstring&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #define Inf 0x3f3f3f3f using namespace std; const int MAXN = 2000 + 5; int n, m, ans; int a[MAXN][MAXN], vis[MAXN][MAXN], Lover[MAXN], Fucker[MAXN], dp[MAXN]; void firstDepthFirstSearch(int x, int y) { if (vis[x][y]) return ; vis[x][y] = 1; if (x + 1 &lt;= n &amp;&amp; a[x][y] &gt; a[x + 1][y]) firstDepthFirstSearch(x + 1, y); if (x - 1 &gt;= 1 &amp;&amp; a[x][y] &gt; a[x - 1][y]) firstDepthFirstSearch(x - 1, y); if (y + 1 &lt;= m &amp;&amp; a[x][y] &gt; a[x][y + 1]) firstDepthFirstSearch(x, y + 1); if (y - 1 &gt;= 1 &amp;&amp; a[x][y] &gt; a[x][y - 1]) firstDepthFirstSearch(x, y - 1); return ; } void secondDepthFirstSearch(int back, int x, int y) { if (vis[x][y]) return ; if (x == 1) Lover[y] = back; vis[x][y] = 1; if (x + 1 &lt;= n &amp;&amp; a[x][y] &lt; a[x + 1][y]) secondDepthFirstSearch(back, x + 1, y); if (x - 1 &gt;= 1 &amp;&amp; a[x][y] &lt; a[x - 1][y]) secondDepthFirstSearch(back, x - 1, y); if (y + 1 &lt;= m &amp;&amp; a[x][y] &lt; a[x][y + 1]) secondDepthFirstSearch(back, x, y + 1); if (y - 1 &gt;= 1 &amp;&amp; a[x][y] &lt; a[x][y - 1]) secondDepthFirstSearch(back, x, y - 1); return; } void thirtiethDepthFirstSearch(int back, int x, int y) { if (vis[x][y]) return ; if (x == 1) Fucker[y] = back; vis[x][y] = 1; if (x+1 &lt;= n &amp;&amp; a[x][y] &lt; a[x + 1][y]) thirtiethDepthFirstSearch(back, x + 1, y); if (x-1 &gt;= 1 &amp;&amp; a[x][y] &lt; a[x - 1][y]) thirtiethDepthFirstSearch(back, x - 1, y); if (y+1 &lt;= m &amp;&amp; a[x][y] &lt; a[x][y + 1]) thirtiethDepthFirstSearch(back, x, y + 1); if (y-1 &gt;= 1 &amp;&amp; a[x][y] &lt; a[x][y - 1]) thirtiethDepthFirstSearch(back, x, y - 1); return; } int main() { // freopen(&quot;flow.in&quot;, &quot;r&quot;, stdin); // freopen(&quot;flow.out&quot;, &quot;w&quot;, stdout); scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (int i = 1; i &lt;= n; ++i) for (int j = 1; j &lt;= m; ++j) scanf(&quot;%d&quot;, &amp;a[i][j]); for (int i = 1; i &lt;= m; ++i) firstDepthFirstSearch(1, i); for (int i = 1; i &lt;= m; ++i) if (!vis[n][i]) ans++; if (ans) { printf(&quot;0\\n%d&quot;,ans); return 0; } memset(vis, 0, sizeof vis); for (int i = 1; i &lt;= m; ++i) secondDepthFirstSearch(i, n, i); memset(vis, 0, sizeof vis); for (int i = m; i &gt;= 1; --i) thirtiethDepthFirstSearch(i, n, i); memset(dp, Inf, sizeof dp); dp[0] = 0; for (int i = 1; i &lt;= m; ++i) for (int j = 1; j &lt;= m; ++j) if (Lover[j] &lt;= i &amp;&amp; Fucker[j] &gt;= i) dp[i] = min(dp[i],dp[Lover[j] - 1] + 1); printf(&quot;1\\n%d&quot;,dp[m]); return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 P2672 【推销员】","slug":"题解-P2672-【推销员】","date":"2019-11-30T14:05:42.000Z","updated":"2020-01-01T05:55:12.054Z","comments":true,"path":"2019/11/30/题解-P2672-【推销员】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P2672-【推销员】/","excerpt":"","text":"首先，这是一道贪心的绝世好题其次，这道题要用到结构体这门高深的知识最后，这道题我样例2没有过但是我交了4个OJ都AC了??????????????????_______???????????????????? 不bb了，上思路吧 这道题主要用到了瞪眼大法以及贪心大法 我们可以记录下往返距离加上自身疲劳值最高的一个崽儿，以下就简称ze。 然后通过观察样例，可以发现ze每次都会参与输出，即每次都会向ze这个点进行推销，但不一定每次都把ze这个点当作终点。因为我们的排序规则是往返距离加上自身疲劳值按降序进行排序，所以ze不一定就是最远的那一户人家。 通过以上的瞪眼观察，我们发现，既然每一次都会有ze这个点，那么我们就可以划分子问题了，符合了贪心的定义。 其实这个思路也不是我独立思考出来的，而是我们机房大佬写了一篇题解。但是这篇题解简直不要太精简，我是完全没有看懂。而代码我也没有去看 给大家观摩一下:一道贪心的题 其实找到距离较远但疲劳值(往返+当前位置的疲劳值）最大的那个位置 让它C位出道 再排序排出疲劳值高的 前缀和+当前最远距离*2 不知道大家看懂没有，反正我这个人一向看不懂别人的思路。不过这也给了我一点启发 Q:为什么不用DP？ A:因为DP会超时，而且看这道题目只是15年普及组的T3，用不着 你们最爱的完整代码 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #define Inf 0x3f3f3f3f using namespace std; const int MAXN = 100000 + 5; struct Node { int Far, Cost; } a[MAXN]; int n, maxValue, list[MAXN]; inline bool Rule(const Node &amp;a, const Node &amp;b) { return ((a.Cost == b.Cost) &amp;&amp; (a.Far &gt; b.Far)) || (a.Cost &gt; b.Cost); } signed main() { scanf(&quot;%d&quot;, &amp;n); for (register int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].Far); for (register int i = 1; i &lt;= n; ++i) { scanf(&quot;%d&quot;, &amp;a[i].Cost); if ((a[i].Far &lt;&lt; 1) + a[i].Cost &gt; (a[maxValue].Far &lt;&lt; 1) + a[i].Cost) maxValue = i; } a[0] = a[maxValue]; a[maxValue] = Node{-Inf, -Inf}; stable_sort(a + 1, a + 1 + n, Rule); for (register int i = 0; i &lt; n; ++i) list[i] = max(list[i - 1], a[i].Far); int and_ = 0; for (register int i = 0; i &lt; n; ++i) { and_ += a[i].Cost; printf(&quot;%d\\n&quot;, and_ + (list[i] &lt;&lt; 1)); } return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"一份神奇的树剖","slug":"一份神奇的树剖","date":"2019-11-30T14:04:58.000Z","updated":"2020-01-01T05:55:37.383Z","comments":true,"path":"2019/11/30/一份神奇的树剖/","link":"","permalink":"www.orchid-any.cf/2019/11/30/一份神奇的树剖/","excerpt":"","text":"我的树剖有点神奇 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;string&gt; #include &lt;vector&gt; #include &lt;utility&gt; #define lson (k &lt;&lt; 1) #define rson (k &lt;&lt; 1 | 1) #define mid (l + r &gt;&gt; 1) #define MID (T[k].l + T[k].r &gt;&gt; 1) using namespace std; const int MAXN = 2 * 1e6 + 10; int head[MAXN &lt;&lt; 1], _next[MAXN &lt;&lt; 1]; int ver[MAXN &lt;&lt; 1], edge[MAXN &lt;&lt; 1], cnt; int a[MAXN], b[MAXN]; int n, m, root, mod, sum; int deep[MAXN], fa[MAXN]; int son[MAXN], tot[MAXN]; int top[MAXN], idx[MAXN]; struct TreeNode { int l; int r; int w; int f; int siz; } T[MAXN]; inline char getcHar() { static char buf[MAXN], *p1 = buf, *p2 = buf; return p1 == p2 &amp;&amp; (p2 = (p1 = buf) + fread(buf, 1, MAXN, stdin), p1 == p2) ? EOF : *p1++; } inline int read() { int a = 0, f = 1; char ch; while (!isdigit(ch = getchar())) if (ch == &#39;-&#39;) f = -1; while (isdigit(ch)) a = (a &lt;&lt; 3) + (a &lt;&lt; 1) + (ch ^ &#39;0&#39;), ch = getchar(); return a * f; } template&lt;typename T&gt; inline void write(T x) { if (x &lt; 0) putchar(&#39;-&#39;), x = -x; if (x &gt; 9) write(x / 10); putchar(x % 10 + &#39;0&#39;); } inline void addEdge(int x, int y, int z) { ver[++sum] = y, edge[sum] = z; _next[sum] = head[x], head[x] = sum; } inline int DepthFirstSearchAtFirst_233_TwoThreeThree(int now, int f, int dp) { deep[now] = dp; fa[now] = f; tot[now] = 1; int maxson = -1; for (int i = head[now]; i; i = _next[i]) { if (ver[i] == f) continue; tot[now] += DepthFirstSearchAtFirst_233_TwoThreeThree(ver[i], now, dp + 1); if (tot[ver[i]] &gt; maxson) maxson = tot[ver[i]] , son[now] = ver[i]; } return tot[now]; } inline void WhatIsTheFuncionOfThisFunction_Upgrade(int k) { T[k].w = (T[lson].w + T[rson].w + mod) % mod; } inline void BuildSegmentTree_sFunction(int k, int l, int r) { T[k].l = l, T[k].r = r; T[k].siz = r - l + 1; if (!(l ^ r)) { T[k].w = a[l]; return ; } BuildSegmentTree_sFunction(lson, l, mid); BuildSegmentTree_sFunction(rson, mid + 1, r); WhatIsTheFuncionOfThisFunction_Upgrade(k); } inline void DepthFirstSearchAtSecond_233_TwoThreeThree(int now, int topf) { idx[now] = ++cnt; a[cnt] = b[now]; top[now] = topf; if (!son[now]) return ; DepthFirstSearchAtSecond_233_TwoThreeThree(son[now], topf); for (int i = head[now]; i; i = _next[i]) { if (!idx[ver[i]]) DepthFirstSearchAtSecond_233_TwoThreeThree(ver[i], ver[i]); } } inline void WhatIsTheFuncionOfThisFunction_PushDown(int k) { if (!T[k].f) return ; T[lson].w = (T[lson].w + T[lson].siz * T[k].f) % mod; T[rson].w = (T[rson].w + T[rson].siz * T[k].f) % mod; T[lson].f = (T[lson].f + T[k].f) % mod; T[rson].f = (T[rson].f + T[k].f) % mod; T[k].f = 0; } inline void WhatIsTheFuncionOfThisFunction_IntervalAdd(int k, int l, int r, int val) { if (l &lt;= T[k].l &amp;&amp; T[k].r &lt;= r) { T[k].w += T[k].siz * val; T[k].f += val; return ; } WhatIsTheFuncionOfThisFunction_PushDown(k); if (l &lt;= MID) WhatIsTheFuncionOfThisFunction_IntervalAdd(lson, l, r, val); if (r &gt; MID) WhatIsTheFuncionOfThisFunction_IntervalAdd(rson, l, r, val); WhatIsTheFuncionOfThisFunction_Upgrade(k); } inline void IWantToAddTree_DoWhatYouWantToDo(int x, int y, int val) { while (top[x] ^ top[y]) { if (deep[top[x]] &lt; deep[top[y]]) swap(x, y); WhatIsTheFuncionOfThisFunction_IntervalAdd(1, idx[top[x]], idx[x], val); x = fa[top[x]]; } if (deep[x] &gt; deep[y]) swap(x, y); WhatIsTheFuncionOfThisFunction_IntervalAdd(1, idx[x], idx[y], val); } inline int WhatIsTheFuncionOfThisFunction_IntervalQuery(int k, int l, int r) { int res = 0; if (l &lt;= T[k].l &amp;&amp; T[k].r &lt;= r) return T[k].w; WhatIsTheFuncionOfThisFunction_PushDown(k); if (l &lt;= MID) res = (res + WhatIsTheFuncionOfThisFunction_IntervalQuery(lson, l, r)) % mod; if (r &gt; MID) res = (res + WhatIsTheFuncionOfThisFunction_IntervalQuery(rson, l, r)) % mod; return res; } inline void IWantToQueryTree_StayHungryStayFoolish(int x, int y) { int res = 0; while (top[x] ^ top[y]) { if (deep[top[x]] &lt; deep[top[y]]) swap(x, y); res = (res + WhatIsTheFuncionOfThisFunction_IntervalQuery(1, idx[top[x]], idx[x])) % mod; x = fa[top[x]]; } if (deep[x] &gt; deep[y]) swap(x, y); write(res = (res + WhatIsTheFuncionOfThisFunction_IntervalQuery(1, idx[x], idx[y])) % mod); } signed main() { n = read(); m = read(); root = read(); mod = read(); for (int i = 1; i &lt;= n; ++i) b[i] = read(); for (int i = 1; i &lt; n; ++i) { int from = read(); int to = read(); addEdge(from, to, 0); addEdge(to, from, 0); } DepthFirstSearchAtFirst_233_TwoThreeThree(root, 0, 1); DepthFirstSearchAtSecond_233_TwoThreeThree(root, root); BuildSegmentTree_sFunction(1, 1, n); while (m--) { int op = read(); int x, y, z; switch (op) { case 1: { x = read(); y = read(); z = read(); z %= mod; IWantToAddTree_DoWhatYouWantToDo(x, y, z); break; } case 2: { x = read(); y = read(); IWantToQueryTree_StayHungryStayFoolish(x, y); putchar(&#39;\\n&#39;); break; } case 3: { x = read(); z = read(); WhatIsTheFuncionOfThisFunction_IntervalAdd(1, idx[x], idx[x] + tot[x] - 1, z % mod); break; } case 4: { x = read(); write(WhatIsTheFuncionOfThisFunction_IntervalQuery(1, idx[x], idx[x] + tot[x] - 1)); putchar(&#39;\\n&#39;); } } } return 0; }","categories":[],"tags":[{"name":"Learning","slug":"Learning","permalink":"www.orchid-any.cf/tags/Learning/"}],"keywords":[]},{"title":"题解 P5661 【公交换乘【民间数据】】","slug":"题解-P5661-【公交换乘【民间数据】】","date":"2019-11-30T14:04:12.000Z","updated":"2020-01-01T05:55:22.463Z","comments":true,"path":"2019/11/30/题解-P5661-【公交换乘【民间数据】】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P5661-【公交换乘【民间数据】】/","excerpt":"","text":"这道题我用的是vector，然后没有–j导致爆零，特此提醒… #include &lt;bits/stdc++.h&gt; using namespace std; vector &lt; pair &lt; int , int &gt; &gt; vec; const int MAXN = 1e5 + 5; struct NODE { int ID; int Pri; int Tim; } a[MAXN]; int n; int ans; signed main() { scanf(&quot;%d&quot;, &amp;n); for (int i = 1; i &lt;= n; ++i) { int x, y, z; scanf(&quot;%d%d%d&quot;, &amp;x, &amp;y, &amp;z); a[i] = NODE{x, y, z}; if (!a[i].ID) { ans += a[i].Pri; vec.push_back(make_pair(a[i].Pri, a[i].Tim)); continue; } int Flag = false; for (int j = 0; j &lt; vec.size(); ++j) { if (abs(a[i].Tim - vec[j].second) &lt;= 45 &amp;&amp; vec[j].first &gt;= a[i].Pri) { vec.erase(vec.begin() + j); --j; //就是因为这句... Flag = true; break; } if (abs(a[i].Tim - vec[j].second) &gt; 45) vec.erase(vec.begin() + j), --j//就是因为这句...; } if (!Flag) ans += a[i].Pri; } printf(&quot;%d\\n&quot;, ans); }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"高斯消元学习","slug":"高斯消元学习","date":"2019-11-30T14:03:19.000Z","updated":"2020-01-01T05:54:46.621Z","comments":true,"path":"2019/11/30/高斯消元学习/","link":"","permalink":"www.orchid-any.cf/2019/11/30/高斯消元学习/","excerpt":"","text":"啃了半天了，终于把高斯消元搞懂了 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;cctype&gt; #include &lt;map&gt; #include &lt;set&gt; #include &lt;utility&gt; #include &lt;ext/pb_ds/assoc_container.hpp&gt; #include &lt;ext/pb_ds/tree_policy.hpp&gt; #include &lt;ext/pb_ds/trie_policy.hpp&gt; #include &lt;ext/pb_ds/priority_queue.hpp&gt; #include &lt;ext/pb_ds/hash_policy.hpp&gt; using namespace std; const int MAXN = 100 + 5; const double eps = 1e-16; double equ[MAXN][MAXN]; int n; template&lt;typename T&gt; inline T f_abs(T x) { return x &gt; 0 ? x : -x; } inline int read() { int a = 0, f = 1; char ch; while (!isdigit(ch = getchar())) if (ch == &#39;-&#39;) f = -1; while (isdigit(ch)) a = (a &lt;&lt; 3) + (a &lt;&lt; 1) + (ch ^ &#39;0&#39;), ch = getchar(); return a * f; } signed main() { n = read(); for (int i = 0; i &lt; n; ++i) { for (int j = 0; j &lt; n; ++j) equ[i][j] = read() * 1.0; equ[i][n] = read() * 1.0; } for (int i = 0; i &lt; n; ++i) { int arv = i; for (int j = i; j &lt; n; ++j) if (f_abs(equ[j][i] - equ[arv][i]) &lt;= eps) arv = j; for (int j = 0; j &lt;= n; ++j) swap(equ[i][j], equ[arv][j]); if (f_abs(equ[i][i]) &lt;= eps) return puts(&quot;No Solution&quot;) &amp; 0; for (int j = i + 1; j &lt;= n; ++j) equ[i][j] /= equ[i][i]; for (int j = 0; j &lt; n; ++j) if (i != j) for (int k = i + 1; k &lt;= n; ++k) equ[j][k] -= equ[j][i] * equ[i][k]; } for (int i = 0; i &lt; n; ++i) printf(&quot;%.2lf\\n&quot;, equ[i][n]); }","categories":[],"tags":[{"name":"Learning","slug":"Learning","permalink":"www.orchid-any.cf/tags/Learning/"}],"keywords":[]},{"title":"题解 P2639 【[USACO09OCT]Bessie的体重问题Bessie's We…】","slug":"题解-P2639-【-USACO09OCT-Bessie的体重问题Bessie-s-We…】","date":"2019-11-30T14:02:25.000Z","updated":"2020-01-01T05:55:04.814Z","comments":true,"path":"2019/11/30/题解-P2639-【-USACO09OCT-Bessie的体重问题Bessie-s-We…】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P2639-【-USACO09OCT-Bessie的体重问题Bessie-s-We…】/","excerpt":"","text":"这是一道很好的背包练手题。 细读题目，可以发现题目中并没有给定每捆干草的价值，只给出了每捆干草的重量。 再读题目，我们发现题目求Bessie不超过节食的限制的前提下可以吃掉多少干草，所以，我们可以把每堆干草的重量看作它的的价值，这就成了一个01背包的模板了 #include &lt;cstdio&gt; #include &lt;iostream&gt; using namespace std; namespace solv { const long long MAXN = 50000 + 5; long long F[MAXN], w[MAXN]; long long n, m, c[MAXN]; template&lt;typename T&gt; inline T getMax(T x, T y) { return x &gt; y ? x : y; } inline void Solve() { scanf(&quot;%lld%lld&quot;, &amp;m, &amp;n); for (long long i = 1; i &lt;= n; ++i) scanf(&quot;%lld&quot;, &amp;w[i]); for (long long i = 1; i &lt;= n; ++i) for (long long j = m; j &gt;= w[i]; --j) F[j] = solv::getMax(F[j], F[j - w[i]] + w[i]); printf(&quot;%lld\\n&quot;, F[m]); } } signed main() { solv::Solve(); }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"A+B Problem Solution","slug":"A-B-Problem-Solution","date":"2019-11-30T14:00:32.000Z","updated":"2020-01-01T05:55:39.848Z","comments":true,"path":"2019/11/30/A-B-Problem-Solution/","link":"","permalink":"www.orchid-any.cf/2019/11/30/A-B-Problem-Solution/","excerpt":"","text":"区间求和，可蒟蒻的我不会线段树，只能写个ODT啦 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;set&gt; #include &lt;map&gt; #include &lt;cctype&gt; #define IT set&lt;node&gt;::iterator using namespace std; struct node { int L; int R; mutable int val; node(int l, int r = -1,int v = 0) : L(l), R(r), val(v) {} bool operator &lt; (const node &amp;rhs) const { return L &lt; rhs.L; } }; set&lt;node&gt; st; inline int read() { int a = 0, f = 1; char ch; while (!isdigit(ch = getchar())) if (ch == &#39;-&#39;) f = -1; while (isdigit(ch)) a = (a &lt;&lt; 3) + (a &lt;&lt; 1) + (ch ^ &#39;0&#39;), ch = getchar(); return a * f; } inline IT split(int pos) { IT it = st.lower_bound(node(pos)); if (it != st.end() &amp;&amp; it-&gt;L == pos) return it; it--; int l = it-&gt;L, r = it-&gt;R; int val = it-&gt;val; st.insert(node(l, pos - 1, val)); return st.insert(node(pos, r, val)).first; } inline int Qsum(int l, int r) { IT itl = split(l), itr = split(r + 1); int res = 0; for (; itl != itr; ++itl) res += itl-&gt;val; return res; } signed main() { for (int i = 1; i &lt;= 2; ++i) st.insert(node(i, i, read())); printf(&quot;%d\\n&quot;, Qsum(1, 2)); return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 新初二NOIP国庆热身水题赛","slug":"题解-新初二NOIP国庆热身水题赛","date":"2019-11-30T13:59:37.000Z","updated":"2020-01-01T05:55:29.063Z","comments":true,"path":"2019/11/30/题解-新初二NOIP国庆热身水题赛/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-新初二NOIP国庆热身水题赛/","excerpt":"","text":"今天的热身赛的题很有质量!T1题面： 现在，存在一组激光编号，需要从中挑选出来k个组成素数，并且可能存在多种方案，所以你需要知道至少要尝 试多少种组合才能破解这个机关，至于如何破解，那就是神兽的程序的问题了。 思路:​ 暴搜没得说 代码:#include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; int n, k, ans; int a[20 + 5]; inline bool isPrime(int x) { for (int i = 2; i * i &lt;= x; ++i) if (!(x % i)) return false; return true; } inline void DFS(int now, int sum, int tot) { if (tot == k) { if (isPrime(sum)) ans++; return ; } if (now == n + 1) return ; DFS(now + 1, sum + a[now], tot + 1); DFS(now + 1, sum, tot); } signed main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;k); for (int i = 1; i &lt;= n; ++i)scanf(&quot;%d&quot;,&amp;a[i]); DFS(1, 0, 0); printf(&quot;%d\\n&quot;, ans); return 0; } T2题面: 这里的防御系统要求所有的资料会在第k次全部弹出，但是每份资料的重量可能不同，且必须按照既定的顺序选择每一次弹出的资料，每一次至少弹出一份资料，上不封顶，但是神兽希望最重的那组资料重量在他们的承受范围之内，所以要求最重的那组资料尽可能轻。 思路虽然读题读了很久，但还好看出了这是一道二分答案的题目 代码#include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; const long long MAXN = 1e6 + 10; long long n, k; long long a[MAXN]; long long check(long long rhs) { long long res = 0; long long tot = 0; for (long long i = 1; i &lt;= n; ++i) { if (tot + a[i] &gt; rhs) { tot = 0; res++; } tot += a[i]; } return res + 1; } signed main() { scanf(&quot;%lld%lld&quot;, &amp;n, &amp;k); long long l = 0, r = 1e16; for (long long i = 1; i &lt;= n; i++) scanf(&quot;%lld&quot;, &amp;a[i]), l = max(l, a[i]); while (l &lt; r) { long long mid = (l + r) / 2; if (check(mid) &lt;= k) r = mid; else l = mid + 1; } printf(&quot;%lld&quot;, l); return 0; } T3题面神兽思考片刻，突然想到了自己设计的一套程序就是针对自动化武器的，而且如果这些武器联网，还能达到传播歼灭所有网内系统的效果，但是每次传播都需要神兽亲自完成，并花费大量时间，当然每次部署一个武器也会花费大量时间，神兽可以选择联网系统中的一部分系统进行部署，剩下的可以由他来传播(由于只能由神兽完成部署和传播，所以所有操作不能同时进行) 思路这道题一看就是最小生成树。板子题没什么可讲的 代码#include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;climits&gt; #include &lt;queue&gt; using namespace std; const int MAXN = 90000 + 5; int cost[MAXN]; struct Edge { int u; int v; int w; bool operator &lt; (const Edge &amp;rhs) const { return w &lt; rhs.w; } } edge[MAXN]; int fa[MAXN]; inline void init(int n) { for (int i = 0; i &lt; n; ++i) fa[i] = i; } inline int find(int x) { if (x ^ fa[x]) fa[x] = find(fa[x]); return fa[x]; } inline void union_(int x, int y) { int u = find(x), v = find(y); if (u ^ v) fa[u] = v; } int n, m; signed main() { scanf(&quot;%d&quot;, &amp;n); for (int i = 1; i &lt;= n; ++i) { int cost; scanf(&quot;%d&quot;, &amp;cost); edge[m++] = Edge{0, i, cost}; } for (int i = 1; i &lt;= n; ++i) for (int j = 1; j &lt;= n; ++j) { int cost; scanf(&quot;%d&quot;, &amp;cost); if (j &gt; i) edge[m++] = Edge{i, j, cost}; } ++n; sort(edge, edge + m); init(n); int ans = 0, src = 0; for (int i = 0; i &lt; m; ++i) { if (find(edge[i].u) != find(edge[i].v)) { union_(edge[i].u, edge[i].v); ans += edge[i].w; src++; if (src == n - 1) break; } } printf(&quot;%d&quot;, ans); return 0; } T4题面小L在上学路上不幸掉入了一口井深D英尺的深井中，不幸的是，他只能靠吃掉到井里的东西来维持生命了，但幸运的是，每隔一段时间小T就会往井里丢东西，小L可以选择用这些东西垫在脚下尝试着爬出井口或者吃掉它们来续命，被垫在脚下的东西就不能再吃了，当然吃过的东西也不能再垫在脚下。当小L的高度和井口高度一样高的时候，他就可以爬出井口了。小L预先知道了一共会有N个东西被丢下来，并且他还知道了他们的掉落时间，高度以及能够维持生命的时间长度。 一开始，小L体内的能量能够维持10个单位时间的生命。 思路`这是一道dp题。似乎贪心也能过？？ 设dp[i][j]为第i个物品掉下时，小L的高度为j时的最大生命值 可推出转移方程： dp[i + 1][j + A[i].height] = max(dp[i + 1][j + A[i].height], dp[i][j] - qq); dp[i + 1][j] = max(dp[i + 1][j], dp[i][j] - qq + A[i].life_num); 其中qq为后一个物品掉落的时间与当前凋落物出现时间差` 代码#include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;climits&gt; #include &lt;queue&gt; using namespace std; const int MAXN = 1000 + 5; int High, n; int dp[MAXN][MAXN / 3]; struct node { int app_tim; int life_num; int height; bool operator &lt; (const node &amp;rhs) const { return app_tim &lt; rhs.app_tim; } } A[MAXN]; signed main() { scanf(&quot;%d%d&quot;, &amp;High, &amp;n); for (int i = 1; i &lt;= n; ++i) { scanf(&quot;%d&quot;, &amp;A[i].app_tim); scanf(&quot;%d&quot;, &amp;A[i].life_num); scanf(&quot;%d&quot;, &amp;A[i].height); } sort(A + 1, A + 1 + n); memset(dp, -1, sizeof dp); dp[0][0] = 10; int ans = 0; for (int i = 0; i &lt;= n; ++i) { int qq = A[i + 1].app_tim - A[i].app_tim; for (int j = 0; j &lt;= High; ++j) { if (dp[i][j] &lt; 0) continue; dp[i + 1][j + A[i].height] = max(dp[i + 1][j + A[i].height], dp[i][j] - qq); dp[i + 1][j] = max(dp[i + 1][j], dp[i][j] - qq + A[i].life_num); if (j + A[i].height &gt;= High) return printf(&quot;%d\\n&quot;, A[i].app_tim) &amp; 0; } if (dp[i][0] &gt;= 0) ans = max(ans, dp[i][0] + A[i].life_num + A[i].app_tim); } printf(&quot;%d\\n&quot;, ans); return 0; } T5思路首先这肯定是一个图，因为A, B, C点的位置不确定。 所以我们先跑一个最短路确定C点，然后再跑两个最短路确定B, C点的位置，最后统计A~C和B~C谁的距离比较小输出即可 代码#include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; #include &lt;set&gt; #include &lt;map&gt; #include &lt;utility&gt; #include &lt;cctype&gt; #include &lt;climits&gt; #define Int long long #define oo LONG_LONG_MAX using namespace std; const int MAXN = 200000 + 5; int n, m; struct Edge { int v; Int w; }; vector&lt;Edge&gt; G[MAXN]; bool vis[MAXN]; Int dis[3][MAXN]; inline void pushEdge(int u, int v, Int w) { G[u].push_back(Edge{v, w}); G[v].push_back(Edge{u, w}); } inline void init(int k) { for (int i = 1; i &lt;= n; ++i) { dis[k][i] = oo; vis[i] = 0; } } inline void BFS(int s, int t) { init(s); dis[s][t] = 0; vis[t] = 1; queue&lt;int&gt; Q; Q.push(t); while (!Q.empty()) { int u = Q.front(); Q.pop(); vis[u] = false; for (int i = 0; i &lt; (int)G[u].size(); ++i) { int v = G[u][i].v; int w = G[u][i].w; if (dis[s][v] &gt; dis[s][u] + w) { dis[s][v] = dis[s][u] + w; if (!vis[v]) { vis[v] = true; Q.push(v); } } } } } signed main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (int i = 1; i &lt;= m; ++i) { int u, v; Int w; scanf(&quot;%d%d%lld&quot;, &amp;u, &amp;v, &amp;w); pushEdge(u, v, w); } Int ans1 = 0; int Node1 = 0; BFS(0, 1); for (int i = 1; i &lt;= n; ++i) if (dis[0][i] &gt; ans1) ans1 = dis[0][i], Node1 = i; BFS(1, Node1); Int ans2 = 0; int Node2 = 0; for (int i = 1; i &lt;= n; ++i) if (dis[1][i] &gt; ans2) ans2 = dis[1][i], Node2 = i; BFS(2, Node2); Int ans3 = 0; for (int i = 1; i &lt;= n; ++i) if (i != Node1 &amp;&amp; i != Node2) ans3 = max(ans3, min(dis[1][i], dis[2][i])); printf(&quot;%lld\\n&quot;, ans3 + ans2); } T7思路`这道题…做过的吧？ 没错就是那个泥泞的牧场。 没有做的同学看了这篇题解估计两道题都能做。 首先我们从泥泞的牧场讲起: 此题的难点在于如何去建图。 很显然我们需要把行和列分别当成二分图的两部分 。 所以我们可以分别把一个点行的连通块和列的连通块处理出来。 每次发现一个点就把编一个号，然后就可以把图构建出来了！ T7只是在泥泞的牧场上加了一个判断而已` 代码#include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; const int MAXN = 1000 + 5; int n, m, R, C; char str[MAXN][MAXN]; int G[MAXN][MAXN], match[MAXN]; int row[MAXN][MAXN]; int vis[MAXN], col[MAXN][MAXN]; inline bool DFS(int k) { for (int i = 1; i &lt;= C; ++i) { if (G[k][i] &amp;&amp; !vis[i]) { vis[i] = true; if (!match[i] || DFS(match[i])) return (match[i] = k) * 0 + 1; } } return 0; } signed main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (int i = 1; i &lt;= n; ++i) scanf(&quot;%s&quot;, str[i] + 1); int t_sum = 0; for (int i = 1; i &lt;= n; ++i) { for (int j = 1; j &lt;= m; ++j) { if (str[i][j] == &#39;*&#39;) { ++t_sum; while ((str[i][j] == &#39;x&#39; || str[i][j] == &#39;*&#39;) &amp;&amp; j &lt;= m) row[i][j] = t_sum, ++j; } } } R = t_sum; t_sum = 0; for (int j = 1; j &lt;= m; ++j) { for (int i = 1; i &lt;= n; ++i) { if (str[i][j] == &#39;*&#39;) { ++t_sum; while ((str[i][j] == &#39;x&#39; || str[i][j] == &#39;*&#39;) &amp;&amp; i &lt;= n) col[i][j] = t_sum, ++i; } } } C = t_sum; for (int i = 1; i &lt;= n; ++i) for (int j = 1; j &lt;= m; ++j) if (str[i][j] == &#39;*&#39;) G[row[i][j]][col[i][j]] = 1; int ans = 0; for (int i = 1; i &lt;= R; ++i) { memset(vis, 0, sizeof vis); if (DFS(i)) ans++; } printf(&quot;%d\\n&quot;, ans); } T7思路这题似乎是一个分治？？ 但经过观察我们可以发现以下规律： 如果最后的温度大于等于最大的温度值，输出possible和最后的温度 如果最后的温度不大于最小的温度值，输出possible和最小值 否则输出Impossible。 代码#include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; int n; double T, C; double t, c; const auto MAX = 1e17; signed main() { double _min = MAX, _max = -MAX; scanf(&quot;%d&quot;, &amp;n); scanf(&quot;%lf%lf&quot;, &amp;T, &amp;C); for (int i = 1; i &lt;= n; ++i) { scanf(&quot;%lf%lf&quot;, &amp;t, &amp;c); T = (T * C + t * c) / (c + C); C += c; _min = min(_min, t); _max = max(_max, t); } if (T &gt;= _max) printf(&quot;Possible\\n%.4lf&quot;, T); else if (T &lt;= _min) printf(&quot;Possible\\n%.4lf&quot;, _min); else puts(&quot;Impossible&quot;); return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 P2482 【[SDOI2010]猪国杀】","slug":"题解-P2482-【-SDOI2010-猪国杀】","date":"2019-11-30T13:58:46.000Z","updated":"2020-01-01T05:54:59.430Z","comments":true,"path":"2019/11/30/题解-P2482-【-SDOI2010-猪国杀】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P2482-【-SDOI2010-猪国杀】/","excerpt":"","text":"一个正常人是不会做这种题的…某年某月某天，我校机房有个可怜人被人强行立了个flag:9月月底做不出来luoguP2482就女装！于是他拼命的调代码。5分，10分，25分……95分。最后实在不行了求救了机房大佬WY才AC。 这位同志的精神感动了机房，于是全机房都开始疯狂的调这道题。我也不幸幸运的成为了其中的一员。 其实这道题就是模拟，大概是因为我平时闲的没事喜欢做游戏，所以感觉挺简单的。 把各种行为封装成自由函数，当然如果你想建class也没有问题。 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; const int MAX_PLAYER_NUM = 100 + 5; const int MAX_CARD_NUM = 2000 + 5; class PIG { public: int card_num; int life_num; int _next; int _last; char identity; char card[MAX_CARD_NUM]; bool isGetedZgln; } A[MAX_PLAYER_NUM]; char id_in_king[MAX_PLAYER_NUM]; //在主公眼里诸猪的身份 char card_set[MAX_CARD_NUM]; char scanner[MAX_PLAYER_NUM]; int n, m, bad_man_num; bool GG; //主公是否GG inline void initt( ); inline void start( ); inline void mopai( int fuck ); //不知道怎么命名了... inline void nmrqq( int fuck ); inline void wjqff( int fuck ); inline void jisha( int Killer, int GGer ); inline void killl( int Killer, int GGer ); inline void jdddd( int Killer, int GGer ); inline bool wxkjj(int x1, int x2, int x3); //为了对齐 signed main() { initt(); start(); if (A[1].life_num &lt;= 0) puts(&quot;FP&quot;); else puts(&quot;MP&quot;); for (int i = 1; i &lt;= n; ++i) { if (A[i].life_num &lt;= 0) puts(&quot;DEAD&quot;); else { for (int j = 1; j &lt;= A[i].card_num; ++j) if (A[i].card[j] != &#39;U&#39;) printf(&quot;%c &quot;, A[i].card[j]); puts(&quot;&quot;); } } return 0; } inline void initt() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (int i = 1; i &lt;= n; ++i) A[i]._next = i + 1, A[i]._last = i - 1; A[n]._next = 1, A[1]._last = n; for (int i = 1; i &lt;= n; ++i) { for (int j = 1; j &lt; MAX_CARD_NUM; ++j) A[i].card[j] = &#39;U&#39;; scanf(&quot;%s&quot;, scanner); A[i].identity = scanner[0]; for (int j = 1; j &lt; 5; ++j) scanf(&quot;%s&quot;, scanner), A[i].card[j] = scanner[0]; A[i].life_num = A[i].card_num = 4; if (A[i].identity == &#39;F&#39;) bad_man_num++; A[i].isGetedZgln = false; } id_in_king[1] = &#39;M&#39;; for (int i = 2; i &lt;= n; ++i) id_in_king[i] = &#39;U&#39;; for (int i = 1; i &lt;= m; ++i) scanf(&quot;%s&quot;, scanner), card_set[m - i + 1] = scanner[0]; } inline void start() { char now_card; GG = true; if (bad_man_num) GG = false; if (GG) return; for (int i = 1; i; i = A[i]._next) { mopai(i), mopai(i); bool isKilled = true; for (int j = 1; j &lt;= A[i].card_num; ++j) { if (A[i].card[j] != &#39;U&#39;) { if (!A[i].life_num) break; now_card = A[i].card[j]; if (now_card == &#39;P&#39;) { if (A[i].life_num != 4) A[i].life_num++, A[i].card[j] = &#39;U&#39;; continue; } if (now_card == &#39;K&#39;) { if (!isKilled &amp;&amp; !A[i].isGetedZgln) continue; if ((A[i].identity == &#39;M&#39;) &amp;&amp; (id_in_king[A[i]._next] != &#39;L&#39;) &amp;&amp; (id_in_king[A[i]._next] != &#39;F&#39;)) continue; if ((A[i].identity == &#39;Z&#39;) &amp;&amp; (id_in_king[A[i]._next] != &#39;F&#39;)) continue; if ((A[i].identity == &#39;F&#39;) &amp;&amp; (id_in_king[A[i]._next] != &#39;Z&#39;) &amp;&amp; (id_in_king[A[i]._next] != &#39;M&#39;)) continue; A[i].card[j] = &#39;U&#39;; killl(i, A[i]._next); id_in_king[i] = A[i].identity; isKilled = false; if (GG) return; continue; } if (now_card == &#39;F&#39;) { if (A[i].identity == &#39;F&#39;) { A[i].card[j] = &#39;U&#39;; jdddd(i, 1); id_in_king[i] = A[i].identity; if (GG) return; j = 0; continue; } for (int k = A[i]._next; k != i; k = A[k]._next) { if ((A[i].identity == &#39;M&#39; &amp;&amp; (id_in_king[k] == &#39;L&#39; || id_in_king[k] == &#39;F&#39;)) || (A[i].identity == &#39;Z&#39; &amp;&amp; id_in_king[k] == &#39;F&#39;)) { A[i].card[j] = &#39;U&#39;; jdddd(i, k); id_in_king[i] = A[i].identity; if (GG) return; j = 0; break; } } continue; } if (now_card == &#39;N&#39;) { A[i].card[j] = &#39;U&#39;; nmrqq(i); if (GG) return; j = 0; continue; } if (now_card == &#39;W&#39;) { A[i].card[j] = &#39;U&#39;; wjqff(i); if (GG) return; j = 0; continue; } if (now_card == &#39;Z&#39;) { A[i].isGetedZgln = true; A[i].card[j] = &#39;U&#39;; j = 0; continue; } } } } } inline void mopai(int fuck) { if (!m) m++; A[fuck].card[++A[fuck].card_num] = card_set[m]; m--; } inline void nmrqq(int fuck) { for (int shit = A[fuck]._next; shit != fuck; shit = A[shit]._next) { if (!wxkjj(fuck, shit, 1)) { int i; for (i = 1; i &lt;= A[shit].card_num; ++i) { if (A[shit].card[i] == &#39;K&#39;) { A[shit].card[i] = &#39;U&#39;; break; } } if (i &gt; A[shit].card_num) { A[shit].life_num--; if (shit == 1 &amp;&amp; id_in_king[fuck] == &#39;U&#39;) id_in_king[fuck] = &#39;L&#39;; if (!A[shit].life_num) jisha(fuck, shit); if (GG) return; } } } } inline void wjqff(int fuck) { for (int shit = A[fuck]._next; shit != fuck; shit = A[shit]._next) { if (!wxkjj(fuck, shit, 1)) { int i; for (i = 1; i &lt;= A[shit].card_num; ++i) { if (A[shit].card[i] == &#39;D&#39;) { A[shit].card[i] = &#39;U&#39;; break; } } if (i &gt; A[shit].card_num) { A[shit].life_num--; if (shit == 1 &amp;&amp; id_in_king[fuck] == &#39;U&#39;) id_in_king[fuck] = &#39;L&#39;; if (!A[shit].life_num) jisha(fuck, shit); if (GG) return; } } } } inline void jisha(int Killer, int GGer) { for (int i = 1; i &lt;= A[GGer].card_num; ++i) { if (A[GGer].card[i] == &#39;P&#39;) { A[GGer].card[i] = &#39;U&#39;; A[GGer].life_num++; return ; } } A[A[GGer]._next]._last = A[GGer]._last; A[A[GGer]._last]._next = A[GGer]._next; if (GGer == 1) { GG = true; return ; } if (A[GGer].identity == &#39;F&#39;) bad_man_num--; if (!bad_man_num) { GG = true; return ; } if (A[GGer].identity == &#39;F&#39;) mopai(Killer), mopai(Killer), mopai(Killer); if (A[GGer].identity == &#39;Z&#39; &amp;&amp; A[Killer].identity == &#39;M&#39;) A[Killer].card_num = 0, A[Killer].isGetedZgln = false; } inline void killl(int Killer, int GGer) { for (int i = 1; i &lt;= A[GGer].card_num; ++i) { if (A[GGer].card[i] == &#39;D&#39;) { A[GGer].card[i] = &#39;U&#39;; return ; } } A[GGer].life_num--; if (!A[GGer].life_num) jisha(Killer, GGer); } inline void jdddd(int Killer, int GGer) { int fuck, shit; if (wxkjj(Killer, GGer, 1)) return ; if (Killer == 1 &amp;&amp; A[GGer].identity == &#39;Z&#39;) { A[GGer].life_num--; if (!A[GGer].life_num) jisha(Killer, GGer); return ; } fuck = shit = 1; while (233) { while (A[GGer].card[fuck] != &#39;K&#39; &amp;&amp; fuck &lt;= A[GGer].card_num) ++fuck; if (fuck &gt; A[GGer].card_num) { A[GGer].life_num--; if (!A[GGer].life_num) jisha(Killer, GGer); return ; } else A[GGer].card[fuck] = &#39;U&#39;; while (A[Killer].card[shit] != &#39;K&#39; &amp;&amp; shit &lt;= A[Killer].card_num) ++shit; if (shit &gt; A[Killer].card_num) { A[Killer].life_num--; if (!A[Killer].life_num) jisha(GGer, Killer); return ; } else A[Killer].card[shit] = &#39;U&#39;; } } inline bool wxkjj(int x1, int x2, int x3) { int i = x1; while (233) { if (x3 == 1) { if (id_in_king[x2] == A[i].identity || (id_in_king[x2] == &#39;M&#39; &amp;&amp; A[i].identity == &#39;Z&#39;) || (id_in_king[x2] == &#39;Z&#39; &amp;&amp; A[i].identity == &#39;M&#39;)) { for (int j = 1; j &lt;= A[i].card_num; ++j) { if (A[i].card[j] == &#39;J&#39;) { A[i].card[j] = &#39;U&#39;; id_in_king[i] = A[i].identity; return !wxkjj(i, x1, 0); } } } } else { if (((A[i].identity == &#39;M&#39; || A[i].identity == &#39;Z&#39;) &amp;&amp; id_in_king[x1] == &#39;F&#39;) || (A[i].identity == &#39;F&#39; &amp;&amp; (id_in_king[x1] == &#39;M&#39; || id_in_king[x1] == &#39;Z&#39;))) { for (int j = 1; j &lt;= A[i].card_num; ++j) { if (A[i].card[j] == &#39;J&#39;) { A[i].card[j] = &#39;U&#39;; id_in_king[i] = A[i].identity; return !wxkjj(i, x1, 0); } } } } i = A[i]._next; if (i == x1) break; } return false; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 P1540 【机器翻译】","slug":"题解-P1540-【机器翻译】","date":"2019-11-30T13:58:12.000Z","updated":"2020-01-01T05:54:55.182Z","comments":true,"path":"2019/11/30/题解-P1540-【机器翻译】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P1540-【机器翻译】/","excerpt":"","text":"这是一道水题。 那为什么我还要来发这一篇题解呢？ 故事要说到我刚学OI的时候。 那时的我，看到这道题，觉得自己一辈子也做不出来。但现在来看看，不过就是队列模拟而已。但这却能让我怀念许久。或许这就是OI的魔力吧 code: #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #include &lt;queue&gt; using namespace std; queue&lt;int&gt; dic; int n, m, x, ans; bool vis[50000 + 5]; signed main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (int i = 0; i &lt; m; ++i) { scanf(&quot;%d&quot;, &amp;x); if (!vis[x]) { ans++; vis[x] = true; dic.push(x); if (dic.size() &gt; n) { vis[dic.front()] = false; dic.pop(); } } } printf(&quot;%d\\n&quot;, ans); return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 P1516 【青蛙的约会】","slug":"题解-P1516-【青蛙的约会】","date":"2019-11-30T13:57:15.000Z","updated":"2020-01-01T05:54:49.413Z","comments":true,"path":"2019/11/30/题解-P1516-【青蛙的约会】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P1516-【青蛙的约会】/","excerpt":"","text":"首先声明，这道题我并没有AC这是一道Ex_gcd的模版题 但我这个数学已经差的一定地步的人来说，不可能用ex_gcd来做。 ·············································································· 其实这道题可以换一个思路来做。如果不用exgcd的话，模拟也是一个不错的选择 但两只青蛙的情况不好模拟，而且时间复杂度肯定会到达一个十分恐怖的地步 那么我们就来思考一下如何将两只青蛙变为一只青蛙(同桌:连体婴儿) 不难想到把青蛙的速度定为x - y，起点定为m - n，这样就可以愉快的模拟啦(其实蒟蒻的我还是想了半天) 但这样只有50分，我也算不来时间复杂度 如果同学能算出时间复杂度或者知道如何优化我的代码评论区请 下面是50分代码: #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; int x, y; int m, n, l; int sp, st, mod_, div_; signed main() { scanf(&quot;%d%d%d%d%d&quot;, &amp;x, &amp;y, &amp;m, &amp;n, &amp;l); if (!(m ^ n)) return puts(&quot;Impossible&quot;) &amp; 0; if (m &gt; n) sp = m - n, st = (y - x + l) % l; else sp = n - m, st = (x - y + l) % l; mod_ = st % sp; div_ = st / sp; int cxk = 0x9C74FC; for (; ; cxk &amp;= 0x76FC44, cxk ^= ((0xFD962C | 0x19AC5F) &amp; 0x79C74A)) { if (!(st % sp)) return printf(&quot;%d\\n&quot;, div_) &amp; 0; register int meta = (st % sp) + l; div_ += meta / sp; st = meta % sp; if (!(st ^ mod_)) return puts(&quot;Impossible&quot;) &amp; 0; } return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 P2671 【求和】","slug":"题解-P2671-【求和】","date":"2019-11-30T13:56:18.000Z","updated":"2020-01-01T05:55:08.726Z","comments":true,"path":"2019/11/30/题解-P2671-【求和】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P2671-【求和】/","excerpt":"","text":"昨天考试这道题也是难倒了很多同学，但这并没有妨碍的某LJS AK(顺便%一波) 但是LJS的题解对我这种数学渣到不行蒟蒻实在不太友好，于是我干脆不看了。 LJS题解传送门 于是我就想，这道题既然能够用暴力，那么就一定能够用各种奇淫技巧优化。 O(N^3)首先我们只考虑$O(N^3)$的裸暴力，枚举每个x,y,z。这样就有20分了。 O(N^2)接下来仔细观察题目，发现题目限制$y-x=z-y$，通过移项，可以得到$z+x=2y$ 那么我们就可以去掉枚举$y$的循环，时间复杂度$O(N^2)$ 这样就有40分了，再加上一些花里胡哨的优化，可以骗到60分 歪正解再来观察$z+x=2y$这个式子，$2y$一定是一个偶数，那么则$z$和$x$满足同奇偶。 再次阅读题目，观察三元组的限制条件，我们很容易就可以想到按照颜色和每个格子的下标进行分组，那么像这样看来，我们就应该把重点放在cmp排序函数上。 既然$z$和$x$满足同奇偶，那么我们就可以按照这个来进行排序。 排序后，我们就可以很方便的判断哪些情况是不可能的，则枚举每一个$z$和$x$，判断不可能的情况，然后直接$break$，听起来有些像搜索的剪枝 照这个思路写出来的40分代码:#include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #define MOD 10007 using namespace std; const int MAXN = 100000 + 5; struct Node { int color; int number; int ID; } a[MAXN]; int n, m; bool Rule(const Node &amp;a, const Node &amp;b) { return ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color == b.color) &amp;&amp; (a.ID &lt; b.ID)) || ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color &lt; b.color)) || (a.ID % 2 &lt; b.ID % 2); } int result(int x, int z) { return (a[x].ID + a[z].ID) * (a[x].number + a[z].number); } int main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].number), a[i].ID = i; for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].color); int ans = 0; sort(a + 1, a + 1 + n, Rule); for (int i = 1; i &lt;= n; ++i) for (int k = i + 1; k &lt;= n; ++k) { if ((a[i].ID + a[k].ID) &amp; 1) break; if (a[i].color != a[k].color) break; ans += result(i, k) % MOD; } printf(&quot;%d\\n&quot;, ans % MOD); return 0; } 结果: 这是为什么呢？原来没开$long$ $long$见祖宗了 90分代码: #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #define MOD 10007 using namespace std; const long long MAXN = 100000 + 5; struct Node { long long color; long long number; long long ID; } a[MAXN]; long long n, m; bool Rule(const Node &amp;a, const Node &amp;b) { return ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color == b.color) &amp;&amp; (a.ID &lt; b.ID)) || ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color &lt; b.color)) || (a.ID % 2 &lt; b.ID % 2); } long long result(long long x, long long z) { return (a[x].ID + a[z].ID) * (a[x].number + a[z].number); } int main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (long long i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].number), a[i].ID = i; for (long long i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].color); long long ans = 0; sort(a + 1, a + 1 + n, Rule); for (long long i = 1; i &lt;= n; ++i) for (long long k = i + 1; k &lt;= n; ++k) { if ((a[i].ID + a[k].ID) &amp; 1) break; if (a[i].color != a[k].color) break; ans += result(i, k) % MOD; } printf(&quot;%d\\n&quot;, ans % MOD); return 0; } 结果: 有一个点超时了，于是开始卡常: #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #define MOD 10007 using namespace std; const int MAXN = 100000 + 5; struct Node { long long color; long long number; long long ID; } a[MAXN]; long long n, m; inline bool Rule(const Node &amp;a, const Node &amp;b) { return ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color == b.color) &amp;&amp; (a.ID &lt; b.ID)) || ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color &lt; b.color)) || (a.ID % 2 &lt; b.ID % 2); } inline long long result(register long long x, register long long z) { return (a[x].ID + a[z].ID) * (a[x].number + a[z].number); } signed main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (register int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].number), a[i].ID = i; for (register int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].color); register long long ans = 0; sort(a + 1, a + 1 + n, Rule); for (register int i = 1; i &lt;= n; ++i) for (register int k = i + 1; k &lt;= n; ++k) { if ((a[i].ID + a[k].ID) &amp; 1) break; if (a[i].color ^ a[k].color) break; ans += result(i, k) % MOD; } printf(&quot;%d\\n&quot;, ans % MOD); return 0; } 依旧是90分，脑子快爆了的我只好祭出这个 #pragma GCC optimize (2) AC代码: #pragma GCC optimize (2) #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; #define MOD 10007 using namespace std; const int MAXN = 100000 + 5; struct Node { long long color; long long number; long long ID; } a[MAXN]; long long n, m; inline bool Rule(const Node &amp;a, const Node &amp;b) { return ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color == b.color) &amp;&amp; (a.ID &lt; b.ID)) || ((a.ID % 2 == b.ID % 2) &amp;&amp; (a.color &lt; b.color)) || (a.ID % 2 &lt; b.ID % 2); } inline long long result(register long long x, register long long z) { return (a[x].ID + a[z].ID) * (a[x].number + a[z].number); } signed main() { scanf(&quot;%d%d&quot;, &amp;n, &amp;m); for (register int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].number), a[i].ID = i; for (register int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].color); register long long ans = 0; sort(a + 1, a + 1 + n, Rule); for (register int i = 1; i &lt;= n; ++i) for (register int k = i + 1; k &lt;= n; ++k) { if ((a[i].ID + a[k].ID) &amp; 1) break; if (a[i].color ^ a[k].color) break; ans += result(i, k) % MOD; } printf(&quot;%d\\n&quot;, ans % MOD); return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 P1087 【FBI树】","slug":"题解-P1087-【FBI树】","date":"2019-11-30T13:54:26.000Z","updated":"2020-01-01T05:54:52.238Z","comments":true,"path":"2019/11/30/题解-P1087-【FBI树】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P1087-【FBI树】/","excerpt":"","text":"最近才学了树形结构，个人认为这是一道很适合新手拿来练手的题目。 因为题目没有规定给出的二进制串是按照POT、IOT、TOT顺序的，所以只需要通过简单单的分治思想便可解决。 具体注释我会写在代码里 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; int n; char *str = new char[(1 &lt;&lt; 10) + 5]; void FBI_WARNING(int left, int right) { int mid = left + ((right - left) &gt;&gt; 1); //据说这样求mid可以使（INT_MAX - 5 + INT_MAX) / 2的溢出悲剧避免发生 if (left != right) FBI_WARNING(left, mid), FBI_WARNING(mid + 1, right); //建树 int Japan = 0, America = 0; //分别统计0、1的出现次数 for (int i = left; i &lt;= right; ++i) str[i] == &#39;0&#39; ? Japan++ : America++; if (Japan &amp;&amp; America) putchar(&#39;F&#39;); else if (Japan) putchar(&#39;B&#39;); else putchar(&#39;I&#39;); //判断输出 } int main() { cin &gt;&gt; n; cin &gt;&gt; str + 1; //这样可以让字符串从下标1开始输入，我学了这么久的OI还是不习惯从0开始233 FBI_WARNING(1, 1 &lt;&lt; n); //1 &lt;&lt; n是二的N次方，也就是str的长度。因为strlen的常数有点大，所以干脆直接位运算 return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 P5018 【对称二叉树】","slug":"题解-P5018-【对称二叉树】","date":"2019-11-30T13:52:50.000Z","updated":"2020-01-01T05:55:19.374Z","comments":true,"path":"2019/11/30/题解-P5018-【对称二叉树】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P5018-【对称二叉树】/","excerpt":"","text":"说实话，我真的不认为这是T4的难度，暴力解决一切 #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;algorithm&gt; #include &lt;cstring&gt; using namespace std; const int MAXN = 1e6 + 5; struct node { int LeftChild; int RightChild; int root; int value; } a[MAXN]; void st(int x) { if (a[x].LeftChild != -1) { st(a[x].LeftChild); a[x].value += a[a[x].LeftChild].value; } if (a[x].RightChild != -1) { st(a[x].RightChild); a[x].value += a[a[x].RightChild].value; } a[x].value++; } bool check(int x, int y) { if (x == -1 &amp;&amp; y == -1) return true; else if (a[x].value ^ a[y].value) return false; else if (a[x].root ^ a[y].root) return false; else return check(a[x].LeftChild, a[y].RightChild) &amp;&amp; check(a[x].RightChild, a[y].LeftChild); } int main() { int n; scanf(&quot;%d&quot;, &amp;n); for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d&quot;, &amp;a[i].root); for (int i = 1; i &lt;= n; ++i) scanf(&quot;%d%d&quot;, &amp;a[i].LeftChild, &amp;a[i].RightChild); st(1); int ans = -0x10086001; for (int i = 1; i &lt;= n; ++i) { if (a[i].value &lt; ans) continue; if (check(a[i].LeftChild, a[i].RightChild)) ans = a[i].value; } printf(&quot;%d\\n&quot;, ans); return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"题解 P1056 【排座椅】","slug":"题解-P1056-【排座椅】","date":"2019-11-30T13:51:27.000Z","updated":"2020-01-01T05:54:41.397Z","comments":true,"path":"2019/11/30/题解-P1056-【排座椅】/","link":"","permalink":"www.orchid-any.cf/2019/11/30/题解-P1056-【排座椅】/","excerpt":"","text":"贪心 策略很简单，就是判断一个过道安排在哪能排除最多。 #include &lt;cstdio&gt; #include &lt;iostream&gt; const int ArrSize = 2000 + 5; int m, n, k, l, d; int x[ArrSize], y[ArrSize]; int a[ArrSize], b[ArrSize]; int main(void) { std::ios::sync_with_stdio(false); scanf(&quot;%d%d&quot;, &amp;m, &amp;n); scanf(&quot;%d%d%d&quot;, &amp;k, &amp;l, &amp;d); for (int i = 0; i &lt; d; ++i) { int x1, y1, x2, y2; scanf(&quot;%d%d%d%d&quot;, &amp;x1, &amp;y1, &amp;x2, &amp;y2); if (x1 == x2) x[std::min(y1, y2)]++; else y[std::min(x1, x2)]++; } for (int i = 0; i &lt; k; ++i) { int Maxx = -10086; int tmp; for (int j = 1; j &lt; m; ++j) if (y[j] &gt; Maxx) { Maxx = y[j]; tmp = j; } y[tmp] = 0; a[tmp]++; } for (int i = 0; i &lt; l; ++i) { int Maxx = -10086; int tmp; for (int j = 1; j &lt; n; ++j) if (x[j] &gt; Maxx) { Maxx = x[j]; tmp = j; } x[tmp] = 0; b[tmp]++; } for (int i = 0; i &lt; ArrSize; ++i) if (a[i]) printf(&quot;%d &quot;, i); putchar(&#39;\\n&#39;); for (int i = 0; i &lt; ArrSize; ++i) if (b[i]) printf(&quot;%d &quot;, i); putchar(&#39;\\n&#39;); return 0; }","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"www.orchid-any.cf/tags/Solution/"}],"keywords":[]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (10)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (10)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (10)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (11)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (11)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (11)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (12)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (12)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (12)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (13)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (13)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (13)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (15)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (15)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (15)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (14)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (14)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (14)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (16)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (16)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (16)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (2)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (2)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (2)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (3)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (3)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (3)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (4)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (4)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (4)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (5)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (5)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (5)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (6)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (6)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (6)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (7)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (7)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (7)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (8)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (8)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (8)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本 (9)","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本 (9)/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本 (9)/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura - 副本","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura - 副本/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura - 副本/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2019-11-15T17:29:48.000Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"www.orchid-any.cf/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"www.orchid-any.cf/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"www.orchid-any.cf/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"www.orchid-any.cf/categories/技术/"}]}]}